// (C)2008 S2 Games
// game_shared_constants.h
//
//=============================================================================
#ifndef __GAME_SHARED_CONSTANTS_H__
#define __GAME_SHARED_CONSTANTS_H__

//=============================================================================
// Definitions
//=============================================================================
const ushort INVALID_ENT_TYPE(0xffff);

const uint NOTIFY_FLAG_CUSTOM_FILES			(BIT(0));
const uint NOTIFY_FLAG_MODIFIED_CORE_FILES	(BIT(1));

const uint GAME_OPTION_INVALID				(0);
const uint GAME_OPTION_FORCE_RANDOM			(BIT(0));
const uint GAME_OPTION_ALTERNATE_SELECTION	(BIT(1));
const uint GAME_OPTION_NO_REPICK			(BIT(2));
const uint GAME_OPTION_NO_SWAP				(BIT(3));
const uint GAME_OPTION_NO_AGILITY			(BIT(4));
const uint GAME_OPTION_NO_INTELLIGENCE		(BIT(5));
const uint GAME_OPTION_NO_STRENGTH			(BIT(6));
const uint GAME_OPTION_ALL_HEROES			(BIT(7));
const uint GAME_OPTION_NO_RESPAWN_TIMER		(BIT(8));
const uint GAME_OPTION_DROP_ITEMS			(BIT(9));
const uint GAME_OPTION_NO_POWERUPS			(BIT(10));
const uint GAME_OPTION_SUPER_CREEPS			(BIT(11));
const uint GAME_OPTION_EASY_MODE			(BIT(12));
const uint GAME_OPTION_DUPLICATE_HEROES		(BIT(13));
const uint GAME_OPTION_REVERSE_SELECTION	(BIT(14));
const uint GAME_OPTION_NO_TOP_LANE			(BIT(15));
const uint GAME_OPTION_NO_MIDDLE_LANE		(BIT(16));
const uint GAME_OPTION_NO_BOTTOM_LANE		(BIT(17));
const uint GAME_OPTION_ALLOW_VETO			(BIT(18));
const uint GAME_OPTION_SHUFFLE_TEAMS		(BIT(19));
const uint GAME_OPTION_AUTOBALANCE_TEAMS	(BIT(20));
const uint GAME_OPTION_TOURNAMENT_RULES		(BIT(21));
const uint GAME_OPTION_HARDCORE				(BIT(22));
const uint GAME_OPTION_CASUAL				(BIT(23));
const uint GAME_OPTION_DEV_HEROES			(BIT(31));

const int RASTER_BUFFER_SPAN(128);

const uint	REGION_UNIT(SURF_STATIC | SURF_MODEL | SURF_DETAIL | SURF_RENDER | SURF_CLIFF);
const uint	REGION_ACTIVE_UNIT(SURF_STATIC | SURF_MODEL | SURF_DETAIL | SURF_CORPSE | SURF_DEAD | SURF_RENDER | SURF_CLIFF);
const uint	REGION_UNITS_AND_TREES(SURF_MODEL | SURF_DETAIL | SURF_RENDER | SURF_CLIFF);
const uint	REGION_TREES(SURF_DYNAMIC | SURF_MODEL | SURF_DETAIL | SURF_RENDER | SURF_CLIFF);

const uint ENTITY_BASE_TYPE_INVALID		(0);

enum EEntityBaseType0
{
	ENTITY_BASE_TYPE0_NULL = 0,

	ENTITY_BASE_TYPE0_ENTITY,

	NUM_ENTITY_BASE_TYPE0
};

enum EEntityBaseType1
{
	ENTITY_BASE_TYPE1_NULL = 0,

	ENTITY_BASE_TYPE1_UNIT,
	ENTITY_BASE_TYPE1_SLAVE,
	ENTITY_BASE_TYPE1_PROJECTILE,
	ENTITY_BASE_TYPE1_AFFECTOR,
	ENTITY_BASE_TYPE1_LINEAR_AFFECTOR,
	ENTITY_BASE_TYPE1_ORDER,

	ENTITY_BASE_TYPE1_SHOP,
	ENTITY_BASE_TYPE1_GAME_INFO,
	ENTITY_BASE_TYPE1_GAME_STATS,
	ENTITY_BASE_TYPE1_WAYPOINT,
	ENTITY_BASE_TYPE1_TEAM_INFO,
	ENTITY_BASE_TYPE1_PLAYER,
	ENTITY_BASE_TYPE1_SHOP_INFO,

	NUM_ENTITY_BASE_TYPE1
};

enum EEntityBaseType2
{
	ENTITY_BASE_TYPE2_NULL = 0,
	
	ENTITY_BASE_TYPE2_HERO,
	ENTITY_BASE_TYPE2_PET,
	ENTITY_BASE_TYPE2_CREEP,
	ENTITY_BASE_TYPE2_GADGET,
	ENTITY_BASE_TYPE2_BUILDING,
	ENTITY_BASE_TYPE2_POWERUP,	
	ENTITY_BASE_TYPE2_NEUTRAL,
	ENTITY_BASE_TYPE2_CRITTER,

	ENTITY_BASE_TYPE2_TOOL,
	ENTITY_BASE_TYPE2_STATE,

	NUM_ENTITY_BASE_TYPE2
};

enum EEntityBaseType3
{
	ENTITY_BASE_TYPE3_NULL = 0,

	ENTITY_BASE_TYPE3_ITEM,
	ENTITY_BASE_TYPE3_ABILITY,

	ENTITY_BASE_TYPE3_STATE_NET_ACCUM,

	NUM_ENTITY_BASE_TYPE3
};

enum EEntityBaseType4
{
	ENTITY_BASE_TYPE4_NULL = 0,

	ENTITY_BASE_TYPE4_ABILITY_ATTRIBUTE,

	NUM_ENTITY_BASE_TYPE4
};

#define ENTITY_BASE_TYPE0(x) (x)
#define ENTITY_BASE_TYPE1(x) (NUM_ENTITY_BASE_TYPE0 * x)
#define ENTITY_BASE_TYPE2(x) (NUM_ENTITY_BASE_TYPE0 * NUM_ENTITY_BASE_TYPE1 * x)
#define ENTITY_BASE_TYPE3(x) (NUM_ENTITY_BASE_TYPE0 * NUM_ENTITY_BASE_TYPE1 * NUM_ENTITY_BASE_TYPE2 * x)
#define ENTITY_BASE_TYPE4(x) (NUM_ENTITY_BASE_TYPE0 * NUM_ENTITY_BASE_TYPE1 * NUM_ENTITY_BASE_TYPE2 * NUM_ENTITY_BASE_TYPE3 * x)

#define GET_ENTITY_BASE_TYPE0(x) (x % NUM_ENTITY_BASE_TYPE0)
#define GET_ENTITY_BASE_TYPE1(x) (x / NUM_ENTITY_BASE_TYPE0 % NUM_ENTITY_BASE_TYPE1)
#define GET_ENTITY_BASE_TYPE2(x) (x / (NUM_ENTITY_BASE_TYPE0 * NUM_ENTITY_BASE_TYPE1) % NUM_ENTITY_BASE_TYPE2)
#define GET_ENTITY_BASE_TYPE3(x) (x / (NUM_ENTITY_BASE_TYPE0 * NUM_ENTITY_BASE_TYPE1 * NUM_ENTITY_BASE_TYPE2) % NUM_ENTITY_BASE_TYPE3)
#define GET_ENTITY_BASE_TYPE4(x) (x / (NUM_ENTITY_BASE_TYPE0 * NUM_ENTITY_BASE_TYPE1 * NUM_ENTITY_BASE_TYPE2 * NUM_ENTITY_BASE_TYPE3))

const uint ENTITY_BASE_TYPE_ENTITY				(ENTITY_BASE_TYPE0(ENTITY_BASE_TYPE0_ENTITY));

const uint ENTITY_BASE_TYPE_PROJECTILE			(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_PROJECTILE));
const uint ENTITY_BASE_TYPE_AFFECTOR			(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_AFFECTOR));
const uint ENTITY_BASE_TYPE_LINEAR_AFFECTOR		(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_LINEAR_AFFECTOR));
const uint ENTITY_BASE_TYPE_ORDER				(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_ORDER));

const uint ENTITY_BASE_TYPE_UNIT				(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_UNIT));
const uint ENTITY_BASE_TYPE_HERO				(ENTITY_BASE_TYPE_UNIT + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_HERO));
const uint ENTITY_BASE_TYPE_PET					(ENTITY_BASE_TYPE_UNIT + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_PET));
const uint ENTITY_BASE_TYPE_CREEP				(ENTITY_BASE_TYPE_UNIT + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_CREEP));
const uint ENTITY_BASE_TYPE_GADGET				(ENTITY_BASE_TYPE_UNIT + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_GADGET));
const uint ENTITY_BASE_TYPE_BUILDING			(ENTITY_BASE_TYPE_UNIT + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_BUILDING));
const uint ENTITY_BASE_TYPE_POWERUP				(ENTITY_BASE_TYPE_UNIT + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_POWERUP));
const uint ENTITY_BASE_TYPE_NEUTRAL				(ENTITY_BASE_TYPE_UNIT + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_NEUTRAL));
const uint ENTITY_BASE_TYPE_CRITTER				(ENTITY_BASE_TYPE_UNIT + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_CRITTER));

const uint ENTITY_BASE_TYPE_SLAVE				(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_SLAVE));
const uint ENTITY_BASE_TYPE_TOOL				(ENTITY_BASE_TYPE_SLAVE + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_TOOL));
const uint ENTITY_BASE_TYPE_ITEM				(ENTITY_BASE_TYPE_TOOL + ENTITY_BASE_TYPE3(ENTITY_BASE_TYPE3_ITEM));
const uint ENTITY_BASE_TYPE_ABILITY				(ENTITY_BASE_TYPE_TOOL + ENTITY_BASE_TYPE3(ENTITY_BASE_TYPE3_ABILITY));
const uint ENTITY_BASE_TYPE_ABILITY_ATTRIBUTE	(ENTITY_BASE_TYPE_ABILITY + ENTITY_BASE_TYPE4(ENTITY_BASE_TYPE4_ABILITY_ATTRIBUTE));
const uint ENTITY_BASE_TYPE_STATE				(ENTITY_BASE_TYPE_SLAVE + ENTITY_BASE_TYPE2(ENTITY_BASE_TYPE2_TOOL));
const uint ENTITY_BASE_TYPE_STATE_NET_ACCUM		(ENTITY_BASE_TYPE_STATE + ENTITY_BASE_TYPE3(ENTITY_BASE_TYPE3_STATE_NET_ACCUM));

const uint ENTITY_BASE_TYPE_SHOP				(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_SHOP));
const uint ENTITY_BASE_TYPE_GAME_INFO			(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_GAME_INFO));
const uint ENTITY_BASE_TYPE_GAME_STATS			(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_GAME_STATS));
const uint ENTITY_BASE_TYPE_WAYPOINT			(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_WAYPOINT));
const uint ENTITY_BASE_TYPE_TEAM_INFO			(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_TEAM_INFO));
const uint ENTITY_BASE_TYPE_PLAYER				(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_PLAYER));
const uint ENTITY_BASE_TYPE_SHOP_INFO			(ENTITY_BASE_TYPE_ENTITY + ENTITY_BASE_TYPE1(ENTITY_BASE_TYPE1_SHOP_INFO));

// Sent as 16-bit, so increase in CClientSnapshot if you add more buttons
const uint GAME_BUTTON_ACTIVATE_PRIMARY		(BIT(0));
const uint GAME_BUTTON_ACTIVATE_SECONDARY	(BIT(1));
const uint GAME_BUTTON_ACTIVATE_TERTIARY	(BIT(2));
const uint GAME_BUTTON_FORWARD				(BIT(3));
const uint GAME_BUTTON_BACK					(BIT(4));
const uint GAME_BUTTON_LEFT					(BIT(5));
const uint GAME_BUTTON_RIGHT				(BIT(6));
const uint GAME_BUTTON_UP					(BIT(7));
const uint GAME_BUTTON_DOWN					(BIT(8));
const uint GAME_BUTTON_CTRL					(BIT(9));
const uint GAME_BUTTON_SHIFT				(BIT(10));
const uint GAME_BUTTON_CANCEL				(BIT(11));
const uint GAME_BUTTON_ABILITY1				(BIT(12));
const uint GAME_BUTTON_ABILITY2				(BIT(13));
const uint GAME_BUTTON_ABILITY3				(BIT(14));
const uint GAME_BUTTON_ABILITY4				(BIT(15));
const uint GAME_BUTTON_ALL					(UINT_MAX);

const uint GAME_CMDR_BUTTON_EDGESCROLL_UP		(BIT(16));
const uint GAME_CMDR_BUTTON_EDGESCROLL_DOWN		(BIT(17));
const uint GAME_CMDR_BUTTON_EDGESCROLL_LEFT		(BIT(18));
const uint GAME_CMDR_BUTTON_EDGESCROLL_RIGHT	(BIT(19));
const uint GAME_CMDR_BUTTON_DRAGSCROLL			(BIT(20));
const uint GAME_CMDR_BUTTON_MOUSELOOK			(BIT(21));

const int DAMAGE_FLAG_NON_LETHAL	(BIT(0));
const int DAMAGE_FLAG_NO_LINK		(BIT(1));

const int MAX_TOTAL_REFEREES(2);
const int MAX_TOTAL_SPECTATORS(10);
//=============================================================================

#endif //__GAME_SHARED_CONSTANTS_H__

; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\code\hon\src\shell\shell_common.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@GHFPNOJB@bad?5allocation?$AA@		; `string'
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?_EEM_DS@?$deque@HV?$K2DequeAllocator@H@@@std@@2HB ; std::deque<int,K2DequeAllocator<int> >::_EEM_DS
PUBLIC	?_EEM_DS@?$deque@IV?$K2DequeAllocator@I@@@std@@2HB ; std::deque<unsigned int,K2DequeAllocator<unsigned int> >::_EEM_DS
PUBLIC	?_EEM_DS@?$deque@MV?$K2DequeAllocator@M@@@std@@2HB ; std::deque<float,K2DequeAllocator<float> >::_EEM_DS
PUBLIC	?_EEM_DS@?$deque@V?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@V?$K2DequeAllocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@@@@std@@2HB ; std::deque<std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >,K2DequeAllocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> > > >::_EEM_DS
PUBLIC	?_EEM_DS@?$deque@USOutputLine@@V?$K2DequeAllocator@USOutputLine@@@@@std@@2HB ; std::deque<SOutputLine,K2DequeAllocator<SOutputLine> >::_EEM_DS
PUBLIC	?_EEM_DS@?$deque@USNotifyLine@@V?$K2DequeAllocator@USNotifyLine@@@@@std@@2HB ; std::deque<SNotifyLine,K2DequeAllocator<SNotifyLine> >::_EEM_DS
PUBLIC	?_EEM_DS@?$deque@USIEvent@@V?$K2DequeAllocator@USIEvent@@@@@std@@2HB ; std::deque<SIEvent,K2DequeAllocator<SIEvent> >::_EEM_DS
;	COMDAT ?_EEM_DS@?$deque@USIEvent@@V?$K2DequeAllocator@USIEvent@@@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@USIEvent@@V?$K2DequeAllocator@USIEvent@@@@@std@@2HB DD 01H ; std::deque<SIEvent,K2DequeAllocator<SIEvent> >::_EEM_DS
CONST	ENDS
;	COMDAT ?_EEM_DS@?$deque@USNotifyLine@@V?$K2DequeAllocator@USNotifyLine@@@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@USNotifyLine@@V?$K2DequeAllocator@USNotifyLine@@@@@std@@2HB DD 01H ; std::deque<SNotifyLine,K2DequeAllocator<SNotifyLine> >::_EEM_DS
CONST	ENDS
;	COMDAT ?_EEM_DS@?$deque@USOutputLine@@V?$K2DequeAllocator@USOutputLine@@@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@USOutputLine@@V?$K2DequeAllocator@USOutputLine@@@@@std@@2HB DD 01H ; std::deque<SOutputLine,K2DequeAllocator<SOutputLine> >::_EEM_DS
CONST	ENDS
CONST	SEGMENT
_TOLERANCE DD	03727c5acr			; 1e-005
_SEC_PER_MS DD	03a83126fr			; 0.001
_MIN_PER_MS DD	0378bcf65r			; 1.66667e-005
_HR_PER_MS DD	03495217dr			; 2.77778e-007
_DAY_PER_MS DD	03246d751r			; 1.15741e-008
_MIN_PER_SEC DD	03c888889r			; 0.0166667
_HR_PER_SEC DD	03991a2b4r			; 0.000277778
_DAY_PER_SEC DD	037422e45r			; 1.15741e-005
_HR_PER_MIN DD	03c888889r			; 0.0166667
_DAY_PER_MIN DD	03a360b61r			; 0.000694444
_DAY_PER_HR DD	03d2aaaabr			; 0.0416667
_PLANE_EPSILON DD 03b03126fr			; 0.002
CONST	ENDS
;	COMDAT ?_EEM_DS@?$deque@V?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@V?$K2DequeAllocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@V?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@V?$K2DequeAllocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@@@@std@@2HB DD 01H ; std::deque<std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >,K2DequeAllocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> > > >::_EEM_DS
CONST	ENDS
;	COMDAT ?_EEM_DS@?$deque@MV?$K2DequeAllocator@M@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@MV?$K2DequeAllocator@M@@@std@@2HB DD 04H ; std::deque<float,K2DequeAllocator<float> >::_EEM_DS
CONST	ENDS
;	COMDAT ?_EEM_DS@?$deque@IV?$K2DequeAllocator@I@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@IV?$K2DequeAllocator@I@@@std@@2HB DD 04H ; std::deque<unsigned int,K2DequeAllocator<unsigned int> >::_EEM_DS
CONST	ENDS
;	COMDAT ?_EEM_DS@?$deque@HV?$K2DequeAllocator@H@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@HV?$K2DequeAllocator@H@@@std@@2HB DD 04H ; std::deque<int,K2DequeAllocator<int> >::_EEM_DS
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
_mag01	DD	00H
	DD	09908b0dfH
_DATA	ENDS
;	COMDAT ??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
CONST	SEGMENT
??_C@_0P@GHFPNOJB@bad?5allocation?$AA@ DB 'bad allocation', 00H ; `string'
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
PUBLIC	??_C@_15OJJGAIFD@?$AA?$FO?$AAb?$AA?$AA@		; `string'
EXTRN	_atexit:PROC
;	COMDAT ??_C@_15OJJGAIFD@?$AA?$FO?$AAb?$AA?$AA@
; File c:\code\hon\src\k2\k2_constants.h
CONST	SEGMENT
??_C@_15OJJGAIFD@?$AA?$FO?$AAb?$AA?$AA@ DB '^', 00H, 'b', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsBlue@@YAXXZ
text$yc	SEGMENT
??__EsBlue@@YAXXZ PROC					; `dynamic initializer for 'sBlue'', COMDAT

; 76   : const tstring sBlue		(_T("^b"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15OJJGAIFD@?$AA?$FO?$AAb?$AA?$AA@
	mov	ecx, OFFSET _sBlue
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsBlue@@YAXXZ		; `dynamic atexit destructor for 'sBlue''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsBlue@@YAXXZ ENDP					; `dynamic initializer for 'sBlue''
text$yc	ENDS
PUBLIC	??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::_String_val<wchar_t,K2StringAllocator<wchar_t> >::~_String_val<wchar_t,K2StringAllocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Tidy
PUBLIC	??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z ; std::_String_val<wchar_t,K2StringAllocator<wchar_t> >::_String_val<wchar_t,K2StringAllocator<wchar_t> >
PUBLIC	??0?$K2StringAllocator@_W@@QAE@XZ		; K2StringAllocator<wchar_t>::K2StringAllocator<wchar_t>
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 8\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z$1
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z
_TEXT	SEGMENT
tv87 = -92						; size = 4
tv86 = -88						; size = 4
$T98628 = -84						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >, COMDAT
; _this$ = ecx

; 650  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T98628[ebp], esp
	call	??0?$K2StringAllocator@_W@@QAE@XZ	; K2StringAllocator<wchar_t>::K2StringAllocator<wchar_t>
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z ; std::_String_val<wchar_t,K2StringAllocator<wchar_t> >::_String_val<wchar_t,K2StringAllocator<wchar_t> >
	mov	DWORD PTR tv87[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 651  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Tidy

; 652  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign

; 653  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
PUBLIC	??1?$K2StringAllocator@_W@@QAE@XZ		; K2StringAllocator<wchar_t>::~K2StringAllocator<wchar_t>
EXTRN	__imp_??1_String_base@std@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ PROC ; std::_String_val<wchar_t,K2StringAllocator<wchar_t> >::~_String_val<wchar_t,K2StringAllocator<wchar_t> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$K2StringAllocator@_W@@QAE@XZ	; K2StringAllocator<wchar_t>::~K2StringAllocator<wchar_t>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_String_base@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1_String_base@std@@QAE@XZ
__ehhandler$??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ ENDP ; std::_String_val<wchar_t,K2StringAllocator<wchar_t> >::~_String_val<wchar_t,K2StringAllocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign
EXTRN	__imp_?length@?$char_traits@_W@std@@SAIPB_W@Z:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 1069 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1070 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_?length@?$char_traits@_W@std@@SAIPB_W@Z
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign

; 1071 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Eos
PUBLIC	?deallocate@?$K2StringAllocator@_W@@QAEXPA_WI@Z	; K2StringAllocator<wchar_t>::deallocate
PUBLIC	??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Ptr$83273 = -8					; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEX_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx

; 2066 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2067 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2068 : 			;
; 2069 : 		else if (_BUF_SIZE <= _Myres)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 8
	jb	SHORT $LN3@Tidy

; 2070 : 			{	// copy any leftovers to small buffer and deallocate
; 2071 : 			_Elem *_Ptr = _Bx._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Ptr$83273[ebp], ecx

; 2072 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2073 : 				_Traits_helper::copy_s<_Traits>(_Bx._Buf, _BUF_SIZE, _Ptr, _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$83273[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	call	??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >
	add	esp, 16					; 00000010H
$LN1@Tidy:

; 2074 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$83273[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$K2StringAllocator@_W@@QAEXPA_WI@Z ; K2StringAllocator<wchar_t>::deallocate
$LN3@Tidy:

; 2075 : 			}
; 2076 : 		_Myres = _BUF_SIZE - 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 7

; 2077 : 		_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Eos

; 2078 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEX_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$K2StringAllocator@_W@@QAE@ABV0@@Z		; K2StringAllocator<wchar_t>::K2StringAllocator<wchar_t>
EXTRN	__imp_??0_String_base@std@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z$1
__ehfuncinfo$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z PROC ; std::_String_val<wchar_t,K2StringAllocator<wchar_t> >::_String_val<wchar_t,K2StringAllocator<wchar_t> >, COMDAT
; _this$ = ecx

; 471  : 		{	// construct allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_String_base@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$K2StringAllocator@_W@@QAE@ABV0@@Z	; K2StringAllocator<wchar_t>::K2StringAllocator<wchar_t>

; 472  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??1?$K2StringAllocator@_W@@QAE@XZ	; K2StringAllocator<wchar_t>::~K2StringAllocator<wchar_t>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z$0:
	lea	ecx, DWORD PTR __Al$[ebp]
	jmp	??1?$K2StringAllocator@_W@@QAE@XZ	; K2StringAllocator<wchar_t>::~K2StringAllocator<wchar_t>
__unwindfunclet$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1_String_base@std@@QAE@XZ
__ehhandler$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@_WV?$K2StringAllocator@_W@@@std@@IAE@V?$K2StringAllocator@_W@@@Z ENDP ; std::_String_val<wchar_t,K2StringAllocator<wchar_t> >::_String_val<wchar_t,K2StringAllocator<wchar_t> >
PUBLIC	?GetInstance@CMemManager@@SAPAV1@XZ		; CMemManager::GetInstance
EXTRN	__imp_??0?$allocator@_W@std@@QAE@XZ:PROC
; Function compile flags: /Odtp /ZI
; File c:\code\hon\src\k2\k2_stl_allocator.h
;	COMDAT ??0?$K2StringAllocator@_W@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$K2StringAllocator@_W@@QAE@XZ PROC			; K2StringAllocator<wchar_t>::K2StringAllocator<wchar_t>, COMDAT
; _this$ = ecx

; 78   : 	K2StringAllocator()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$allocator@_W@std@@QAE@XZ

; 79   : 	{
; 80   : 		// ensure that the memory manager is initialized.
; 81   : 		CMemManager::GetInstance();

	call	?GetInstance@CMemManager@@SAPAV1@XZ	; CMemManager::GetInstance

; 82   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$K2StringAllocator@_W@@QAE@XZ ENDP			; K2StringAllocator<wchar_t>::K2StringAllocator<wchar_t>
_TEXT	ENDS
PUBLIC	??_C@_1BM@OHEHCOIA@?$AA?$CB?$AAs?$AA_?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@KJPBGHJA@?$AA?$CB?$AAs?$AA_?$AAb?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EE@LOIDLIIL@?$AAc?$AA?3?$AA?2?$AAc?$AAo?$AAd?$AAe?$AA?2?$AAh?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAk?$AA2?$AA?2?$AAc?$AA_?$AAm?$AAe?$AAm?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?4@ ; `string'
PUBLIC	?__LINE__Var@?1??GetInstance@CMemManager@@SAPAV2@XZ@4JA@ff9028fa ; `CMemManager::GetInstance'::`2'::__LINE__Var
EXTRN	__imp_?Init@CMemManager@@AAEXXZ:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp_?s_bRequested@CMemManager@@0_NA:BYTE
EXTRN	__imp_?s_pInstance@CMemManager@@0PAV1@A:DWORD
EXTRN	__imp___wassert:PROC
EXTRN	__imp_?s_bReleased@CMemManager@@0_NA:BYTE
;	COMDAT ??_C@_1BM@OHEHCOIA@?$AA?$CB?$AAs?$AA_?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?$AA@
; File c:\code\hon\src\k2\c_memmanager.h
CONST	SEGMENT
??_C@_1BM@OHEHCOIA@?$AA?$CB?$AAs?$AA_?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?$AA@ DB '!'
	DB	00H, 's', 00H, '_', 00H, 'b', 00H, 'R', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'e', 00H, 's', 00H, 't', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@KJPBGHJA@?$AA?$CB?$AAs?$AA_?$AAb?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@KJPBGHJA@?$AA?$CB?$AAs?$AA_?$AAb?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAd?$AA?$AA@ DB '!'
	DB	00H, 's', 00H, '_', 00H, 'b', 00H, 'R', 00H, 'e', 00H, 'l', 00H
	DB	'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@LOIDLIIL@?$AAc?$AA?3?$AA?2?$AAc?$AAo?$AAd?$AAe?$AA?2?$AAh?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAk?$AA2?$AA?2?$AAc?$AA_?$AAm?$AAe?$AAm?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?4@
CONST	SEGMENT
??_C@_1EE@LOIDLIIL@?$AAc?$AA?3?$AA?2?$AAc?$AAo?$AAd?$AAe?$AA?2?$AAh?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAk?$AA2?$AA?2?$AAc?$AA_?$AAm?$AAe?$AAm?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?4@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'h', 00H, 'o', 00H, 'n', 00H, '\', 00H, 's', 00H, 'r'
	DB	00H, 'c', 00H, '\', 00H, 'k', 00H, '2', 00H, '\', 00H, 'c', 00H
	DB	'_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'm', 00H, 'a', 00H, 'n'
	DB	00H, 'a', 00H, 'g', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??GetInstance@CMemManager@@SAPAV2@XZ@4JA@ff9028fa
_DATA	SEGMENT
?__LINE__Var@?1??GetInstance@CMemManager@@SAPAV2@XZ@4JA@ff9028fa DD 0e2H ; `CMemManager::GetInstance'::`2'::__LINE__Var
; Function compile flags: /Odtp /ZI
_DATA	ENDS
;	COMDAT ?GetInstance@CMemManager@@SAPAV1@XZ
_TEXT	SEGMENT
?GetInstance@CMemManager@@SAPAV1@XZ PROC		; CMemManager::GetInstance, COMDAT

; 226  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 227  : 	assert(!s_bReleased);

	mov	eax, DWORD PTR __imp_?s_bReleased@CMemManager@@0_NA
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@GetInstanc
	mov	edx, DWORD PTR ?__LINE__Var@?1??GetInstance@CMemManager@@SAPAV2@XZ@4JA@ff9028fa
	add	edx, 1
	push	edx
	push	OFFSET ??_C@_1EE@LOIDLIIL@?$AAc?$AA?3?$AA?2?$AAc?$AAo?$AAd?$AAe?$AA?2?$AAh?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAk?$AA2?$AA?2?$AAc?$AA_?$AAm?$AAe?$AAm?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?4@
	push	OFFSET ??_C@_1BK@KJPBGHJA@?$AA?$CB?$AAs?$AA_?$AAb?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAd?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN4@GetInstanc:

; 228  : 	if (s_pInstance == NULL)

	mov	eax, DWORD PTR __imp_?s_pInstance@CMemManager@@0PAV1@A
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@GetInstanc

; 229  : 	{
; 230  : 		assert(!s_bRequested);

	mov	eax, DWORD PTR __imp_?s_bRequested@CMemManager@@0_NA
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@GetInstanc
	mov	edx, DWORD PTR ?__LINE__Var@?1??GetInstance@CMemManager@@SAPAV2@XZ@4JA@ff9028fa
	add	edx, 4
	push	edx
	push	OFFSET ??_C@_1EE@LOIDLIIL@?$AAc?$AA?3?$AA?2?$AAc?$AAo?$AAd?$AAe?$AA?2?$AAh?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAk?$AA2?$AA?2?$AAc?$AA_?$AAm?$AAe?$AAm?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?4@
	push	OFFSET ??_C@_1BM@OHEHCOIA@?$AA?$CB?$AAs?$AA_?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN5@GetInstanc:

; 231  : 		s_bRequested = true;

	mov	eax, DWORD PTR __imp_?s_bRequested@CMemManager@@0_NA
	mov	BYTE PTR [eax], 1

; 232  : 		s_pInstance = (CMemManager*)malloc(sizeof(CMemManager));

	push	1
	call	DWORD PTR __imp__malloc
	add	esp, 4
	mov	ecx, DWORD PTR __imp_?s_pInstance@CMemManager@@0PAV1@A
	mov	DWORD PTR [ecx], eax

; 233  : #ifdef __GNUC__
; 234  : 		g_pMemManager = s_pInstance;
; 235  : #endif
; 236  : 		s_pInstance->Init();

	mov	eax, DWORD PTR __imp_?s_pInstance@CMemManager@@0PAV1@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?Init@CMemManager@@AAEXXZ
$LN1@GetInstanc:

; 237  : 	}
; 238  : 	return s_pInstance;

	mov	eax, DWORD PTR __imp_?s_pInstance@CMemManager@@0PAV1@A
	mov	eax, DWORD PTR [eax]

; 239  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@CMemManager@@SAPAV1@XZ ENDP		; CMemManager::GetInstance
; Function compile flags: /Odtp /ZI
; File c:\code\hon\src\k2\k2_stl_allocator.h
_TEXT	ENDS
;	COMDAT ??1?$K2StringAllocator@_W@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$K2StringAllocator@_W@@QAE@XZ PROC			; K2StringAllocator<wchar_t>::~K2StringAllocator<wchar_t>, COMDAT
; _this$ = ecx

; 88   : 	~K2StringAllocator() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$K2StringAllocator@_W@@QAE@XZ ENDP			; K2StringAllocator<wchar_t>::~K2StringAllocator<wchar_t>
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Grow
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign
PUBLIC	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Inside
; Function compile flags: /Odtp /ZI
; File c:\program files\microsoft visual studio 8\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 1056 : 		{	// assign [_Ptr, _Ptr + _Num)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1057 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1058 : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1059 : 
; 1060 : 		if (_Grow(_Num))

	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1061 : 			{	// make room and assign new stuff
; 1062 : 			_Traits_helper::copy_s<_Traits>(_Myptr(), _Myres, _Ptr, _Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	push	eax
	call	??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >
	add	esp, 16					; 00000010H

; 1063 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Eos
$LN1@assign:

; 1064 : 			}
; 1065 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1066 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::erase
PUBLIC	?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::npos
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::size
EXTRN	__imp_?_Xran@_String_base@std@@SAXXZ:PROC
;	COMDAT ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@2IB DD 0ffffffffH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::npos
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 1038 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1039 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign@2

; 1040 : 			_String_base::_Xran();	// _Roff off end

	call	DWORD PTR __imp_?_Xran@_String_base@std@@SAXXZ
$LN5@assign@2:

; 1041 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1042 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign@2

; 1043 : 			_Num = _Count;	// trim _Num to size

	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
$LN4@assign@2:

; 1044 : 
; 1045 : 		if (this == &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign@2

; 1046 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::erase
	jmp	SHORT $LN2@assign@2
$LN3@assign@2:

; 1047 : 		else if (_Grow(_Num))

	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@2

; 1048 : 			{	// make room and assign new stuff
; 1049 : 			_Traits_helper::copy_s<_Traits>(_Myptr(), _Myres, _Right._Myptr() + _Roff, _Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Roff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	push	eax
	call	??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >
	add	esp, 16					; 00000010H

; 1050 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Eos
$LN2@assign@2:

; 1051 : 			}
; 1052 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1053 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::assign
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 2087 : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2088 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 8
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv70[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv70[ebp]

; 2089 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IBEPB_WXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 2092 : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2093 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 8
	jb	SHORT $LN3@Myptr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@Myptr@2
$LN3@Myptr@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv70[ebp], eax
$LN4@Myptr@2:
	mov	eax, DWORD PTR tv70[ebp]

; 2094 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
_TEXT	ENDS
PUBLIC	??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z ; std::_Traits_helper::move_s<std::char_traits<wchar_t> >
; Function compile flags: /Odtp /ZI
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$85088 = -8					; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 1240 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1241 : 		if (_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase

; 1242 : 			_String_base::_Xran();	// _Off off end

	call	DWORD PTR __imp_?_Xran@_String_base@std@@SAXXZ
$LN3@erase:

; 1243 : 		if (_Mysize - _Off < _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase

; 1244 : 			_Count = _Mysize - _Off;	// trim _Count

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN2@erase:

; 1245 : 		if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase

; 1246 : 			{	// move elements down
; 1247 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off, _Myres - _Off, _Myptr() + _Off + _Count,
; 1248 : 				_Mysize - _Off - _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	call	??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z ; std::_Traits_helper::move_s<std::char_traits<wchar_t> >
	add	esp, 16					; 00000010H

; 1249 : 			size_type _Newsize = _Mysize - _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$85088[ebp], ecx

; 1250 : 			_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$85088[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Eos
$LN1@erase:

; 1251 : 			}
; 1252 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1253 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::erase
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::size, COMDAT
; _this$ = ecx

; 1636 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1637 : 		return (_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]

; 1638 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::size
_TEXT	ENDS
EXTRN	__imp_?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T98693 = -70						; size = 2
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx

; 2030 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2031 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

	mov	WORD PTR $T98693[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+24], ecx
	lea	edx, DWORD PTR $T98693[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Newsize$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	DWORD PTR __imp_?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
	add	esp, 8

; 2032 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Eos
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Copy
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::max_size
EXTRN	__imp_?_Xlen@_String_base@std@@SAXXZ:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
tv80 = -72						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NI_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx

; 2036 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2037 : 			if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2038 : 			_String_base::_Xlen();	// result too long

	call	DWORD PTR __imp_?_Xlen@_String_base@std@@SAXXZ
$LN6@Grow:

; 2039 : 		if (_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2040 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2041 : 		else if (_Trim && _Newsize < _BUF_SIZE)

	movzx	eax, BYTE PTR __Trim$[ebp]
	test	eax, eax
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 8
	jae	SHORT $LN3@Grow

; 2042 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2043 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR tv80[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv80[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2044 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2045 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Eos
$LN4@Grow:

; 2046 : 		return (0 < _Newsize);	// return true only if more work to do

	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax

; 2047 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NI_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Grow
_TEXT	ENDS
EXTRN	__imp_??0?$allocator@_W@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /ZI
; File c:\code\hon\src\k2\k2_stl_allocator.h
;	COMDAT ??0?$K2StringAllocator@_W@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_al$ = 8						; size = 4
??0?$K2StringAllocator@_W@@QAE@ABV0@@Z PROC		; K2StringAllocator<wchar_t>::K2StringAllocator<wchar_t>, COMDAT
; _this$ = ecx

; 86   : 	K2StringAllocator(const K2StringAllocator &al) : std::allocator<T>(al) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$allocator@_W@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$K2StringAllocator@_W@@QAE@ABV0@@Z ENDP		; K2StringAllocator<wchar_t>::K2StringAllocator<wchar_t>
_TEXT	ENDS
PUBLIC	??_C@_0P@CDENJMCL@ctx_STL_string?$AA@		; `string'
PUBLIC	??_C@_0CC@PDHCCDLE@c?3?2code?2hon?2src?2k2?2c_memmanager?4@ ; `string'
EXTRN	__imp_?Deallocate@CMemManager@@SAXPAXPBDW4MemoryType@@1F@Z:PROC
;	COMDAT ??_C@_0P@CDENJMCL@ctx_STL_string?$AA@
CONST	SEGMENT
??_C@_0P@CDENJMCL@ctx_STL_string?$AA@ DB 'ctx_STL_string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PDHCCDLE@c?3?2code?2hon?2src?2k2?2c_memmanager?4@
CONST	SEGMENT
??_C@_0CC@PDHCCDLE@c?3?2code?2hon?2src?2k2?2c_memmanager?4@ DB 'c:\code\h'
	DB	'on\src\k2\c_memmanager.h', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?deallocate@?$K2StringAllocator@_W@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$K2StringAllocator@_W@@QAEXPA_WI@Z PROC	; K2StringAllocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx

; 98   : 	void	deallocate(pointer _Ptr, size_type)		{ MemManager.Deallocate(_Ptr, "ctx_STL_string"); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	162					; 000000a2H
	push	OFFSET ??_C@_0CC@PDHCCDLE@c?3?2code?2hon?2src?2k2?2c_memmanager?4@
	push	3
	push	OFFSET ??_C@_0P@CDENJMCL@ctx_STL_string?$AA@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_?Deallocate@CMemManager@@SAXPAXPBDW4MemoryType@@1F@Z
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$K2StringAllocator@_W@@QAEXPA_WI@Z ENDP	; K2StringAllocator<wchar_t>::deallocate
_TEXT	ENDS
EXTRN	__imp_?max_size@?$allocator@_W@std@@QBEIXZ:PROC
; Function compile flags: /Odtp /ZI
; File c:\program files\microsoft visual studio 8\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ
_TEXT	SEGMENT
tv70 = -76						; size = 4
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 1641 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1642 : 		size_type _Num = _Mybase::_Alval.max_size();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?max_size@?$allocator@_W@std@@QBEIXZ
	mov	DWORD PTR __Num$[ebp], eax

; 1643 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv70[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv70[ebp]

; 1644 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$K2StringAllocator@_W@@QAEPA_WI@Z	; K2StringAllocator<wchar_t>::allocate
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$0
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$5
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z
_TEXT	SEGMENT
tv149 = -96						; size = 4
tv148 = -96						; size = 4
__Ptr$ = -28						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx

; 2000 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2001 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 7
	mov	DWORD PTR __Newres$[ebp], eax

; 2002 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN6@Copy

; 2003 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax

; 2004 : 		else if (_Newres / 3 < _Myres / 2

	jmp	SHORT $LN5@Copy
$LN6@Copy:

; 2005 : 			&& _Myres <= max_size() - _Myres / 2)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	eax, ecx
	jae	SHORT $LN5@Copy
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+28]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], eax
	ja	SHORT $LN5@Copy

; 2006 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR __Newres$[ebp], ecx
$LN5@Copy:

; 2007 : 		_Elem *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 2008 : 
; 2009 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2010 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$K2StringAllocator@_W@@QAEPA_WI@Z ; K2StringAllocator<wchar_t>::allocate
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN9@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$0:

; 2011 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2012 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax

; 2013 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2014 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$K2StringAllocator@_W@@QAEPA_WI@Z ; K2StringAllocator<wchar_t>::allocate
	mov	DWORD PTR tv149[ebp], eax
	mov	ecx, DWORD PTR tv149[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN11@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$1:

; 2015 : 			_CATCH_ALL
; 2016 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Tidy

; 2017 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2018 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$2
	ret	0
$LN11@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$2:

; 2019 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$3
	ret	0
$LN9@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z$3:

; 2020 : 
; 2021 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2022 : 			_Traits_helper::copy_s<_Traits>(_Ptr, _Newres + 1, _Myptr(), _Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >
	add	esp, 16					; 00000010H
$LN1@Copy:

; 2023 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Tidy

; 2024 : 		_Bx._Ptr = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 2025 : 		_Myres = _Newres;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [eax+28], ecx

; 2026 : 		_Eos(_Oldlen);

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Eos
$LN8@Copy:

; 2027 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEXII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Copy
PUBLIC	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z		; std::_Debug_pointer<wchar_t>
PUBLIC	??_C@_1HM@LNGKEPMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ ; `string'
;	COMDAT ??_C@_1HM@LNGKEPMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
CONST	SEGMENT
??_C@_1HM@LNGKEPMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '8', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e'
	DB	00H, '\', 00H, 'x', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NPB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx

; 2050 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2051 : 		_DEBUG_POINTER(_Ptr);

	push	2051					; 00000803H
	push	OFFSET ??_C@_1HM@LNGKEPMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH

; 2052 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	lea	eax, DWORD PTR [eax+edx*2]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2053 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2054 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2055 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2056 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAE_NPB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Inside
_TEXT	ENDS
PUBLIC	?Allocate@CMemManager@@SAPAXIPBDW4MemoryType@@00F@Z ; CMemManager::Allocate
PUBLIC	??_C@_04CGFJFPFD@none?$AA@			; `string'
;	COMDAT ??_C@_04CGFJFPFD@none?$AA@
; File c:\code\hon\src\k2\k2_stl_allocator.h
CONST	SEGMENT
??_C@_04CGFJFPFD@none?$AA@ DB 'none', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?allocate@?$K2StringAllocator@_W@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$K2StringAllocator@_W@@QAEPA_WI@Z PROC	; K2StringAllocator<wchar_t>::allocate, COMDAT
; _this$ = ecx

; 96   : 	pointer	allocate(size_type _Count)				{ return (pointer)MemManager.Allocate(_Count * sizeof(T), "ctx_STL_string"); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@PDHCCDLE@c?3?2code?2hon?2src?2k2?2c_memmanager?4@
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	2
	push	OFFSET ??_C@_0P@CDENJMCL@ctx_STL_string?$AA@
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	push	eax
	call	?Allocate@CMemManager@@SAPAXIPBDW4MemoryType@@00F@Z ; CMemManager::Allocate
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$K2StringAllocator@_W@@QAEPA_WI@Z ENDP	; K2StringAllocator<wchar_t>::allocate
_TEXT	ENDS
EXTRN	__imp_?heap_malloc@MICRO_ALLOCATOR@@YAPAXPAVHeapManager@1@I@Z:PROC
EXTRN	__imp_?m_cMicroHeapManager@CMemManager@@0PAVHeapManager@MICRO_ALLOCATOR@@A:DWORD
; Function compile flags: /Odtp /ZI
; File c:\code\hon\src\k2\c_memmanager.h
;	COMDAT ?Allocate@CMemManager@@SAPAXIPBDW4MemoryType@@00F@Z
_TEXT	SEGMENT
_pResult$ = -4						; size = 4
_z$ = 8							; size = 4
_szContext$ = 12					; size = 4
_eMemType$ = 16						; size = 4
_szType$ = 20						; size = 4
_szFile$ = 24						; size = 4
_nLine$ = 28						; size = 2
?Allocate@CMemManager@@SAPAXIPBDW4MemoryType@@00F@Z PROC ; CMemManager::Allocate, COMDAT

; 337  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 338  : 	void* pResult;
; 339  : #ifdef K2_USE_MICRO_ALLOCATOR
; 340  : 	pResult = MICRO_ALLOCATOR::heap_malloc(m_cMicroHeapManager, z);

	mov	eax, DWORD PTR _z$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?m_cMicroHeapManager@CMemManager@@0PAVHeapManager@MICRO_ALLOCATOR@@A
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp_?heap_malloc@MICRO_ALLOCATOR@@YAPAXPAVHeapManager@1@I@Z
	add	esp, 8
	mov	DWORD PTR _pResult$[ebp], eax

; 341  : #else
; 342  : 	pResult = malloc(z);
; 343  : #endif
; 344  : 
; 345  : #ifdef K2_TRACK_MEM
; 346  : 	if (s_bTrackAllocs)
; 347  : 	{
; 348  : 		if (szContext != NULL)
; 349  : 			TRACK_ALLOC(pResult, (uint)z, eMemType, GetStr(szContext), GetStr(szType), GetStr(szFile), nLine);
; 350  : 	}
; 351  : #endif
; 352  : 	return pResult;

	mov	eax, DWORD PTR _pResult$[ebp]

; 353  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Allocate@CMemManager@@SAPAXIPBDW4MemoryType@@00F@Z ENDP ; CMemManager::Allocate
_TEXT	ENDS
PUBLIC	??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >
PUBLIC	??$_Char_traits_cat@U?$char_traits@_W@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ; std::_Char_traits_cat<std::char_traits<wchar_t> >
; Function compile flags: /Odtp /ZI
; File c:\program files\microsoft visual studio 8\vc\include\iosfwd
;	COMDAT ??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z
_TEXT	SEGMENT
$T98735 = -65						; size = 1
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z PROC ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >, COMDAT

; 581  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 582  : 		return copy_s<_Traits>(_First1, _Size, _First2, _Count, _Char_traits_cat<_Traits>());

	call	??$_Char_traits_cat@U?$char_traits@_W@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ; std::_Char_traits_cat<std::char_traits<wchar_t> >
	mov	BYTE PTR $T98735[ebp], al
	mov	al, BYTE PTR $T98735[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First1$[ebp]
	push	ecx
	call	??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >
	add	esp, 20					; 00000014H

; 583  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z ENDP ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$_Char_traits_cat@U?$char_traits@_W@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ
_TEXT	SEGMENT
__Secure$ = -1						; size = 1
??$_Char_traits_cat@U?$char_traits@_W@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ PROC ; std::_Char_traits_cat<std::char_traits<wchar_t> >, COMDAT

; 568  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 569  : 		typename _Char_traits_category<_Traits>::_Secure_char_traits _Secure;
; 570  : 		return (_Secure);

	mov	al, BYTE PTR __Secure$[ebp]

; 571  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Char_traits_cat@U?$char_traits@_W@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ENDP ; std::_Char_traits_cat<std::char_traits<wchar_t> >
_TEXT	ENDS
EXTRN	__imp_?_Copy_s@?$char_traits@_W@std@@SAPA_WPA_WIPB_WI@Z:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
___formal$ = 24						; size = 1
??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z PROC ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >, COMDAT

; 589  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 590  : 		return _Traits::_Copy_s(_First1, _Size, _First2, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Size$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Copy_s@?$char_traits@_W@std@@SAPA_WPA_WIPB_WI@Z
	add	esp, 16					; 00000010H

; 591  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$copy_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z ENDP ; std::_Traits_helper::copy_s<std::char_traits<wchar_t> >
_TEXT	ENDS
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
; File c:\program files\microsoft visual studio 8\vc\include\xutility
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??$_Debug_pointer@_W@std@@YAXPB_W0I@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z PROC		; std::_Debug_pointer<wchar_t>, COMDAT

; 1370 : 	{	// test iterator for non-singularity, const pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 1371 : 	if (_First == 0)

	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin

; 1372 : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:

; 1373 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z ENDP		; std::_Debug_pointer<wchar_t>
_TEXT	ENDS
PUBLIC	??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::move_s<std::char_traits<wchar_t> >
; Function compile flags: /Odtp /ZI
; File c:\program files\microsoft visual studio 8\vc\include\iosfwd
;	COMDAT ??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z
_TEXT	SEGMENT
$T98744 = -65						; size = 1
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z PROC ; std::_Traits_helper::move_s<std::char_traits<wchar_t> >, COMDAT

; 608  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 609  : 		return move_s<_Traits>(_First1, _Size, _First2, _Count, _Char_traits_cat<_Traits>());

	call	??$_Char_traits_cat@U?$char_traits@_W@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ; std::_Char_traits_cat<std::char_traits<wchar_t> >
	mov	BYTE PTR $T98744[ebp], al
	mov	al, BYTE PTR $T98744[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First1$[ebp]
	push	ecx
	call	??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::move_s<std::char_traits<wchar_t> >
	add	esp, 20					; 00000014H

; 610  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WI@Z ENDP ; std::_Traits_helper::move_s<std::char_traits<wchar_t> >
_TEXT	ENDS
EXTRN	__imp_?_Move_s@?$char_traits@_W@std@@SAPA_WPA_WIPB_WI@Z:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
___formal$ = 24						; size = 1
??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z PROC ; std::_Traits_helper::move_s<std::char_traits<wchar_t> >, COMDAT

; 616  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 617  : 		return _Traits::_Move_s(_First1, _Size, _First2, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Size$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Move_s@?$char_traits@_W@std@@SAPA_WPA_WIPB_WI@Z
	add	esp, 16					; 00000010H

; 618  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move_s@U?$char_traits@_W@std@@@_Traits_helper@std@@YAPA_WPA_WIPB_WIU_Secure_char_traits_tag@1@@Z ENDP ; std::_Traits_helper::move_s<std::char_traits<wchar_t> >
_TEXT	ENDS
PUBLIC	??_C@_15FBCKGPDG@?$AA?$FO?$AAc?$AA?$AA@		; `string'
;	COMDAT ??_C@_15FBCKGPDG@?$AA?$FO?$AAc?$AA?$AA@
; File c:\code\hon\src\k2\k2_constants.h
CONST	SEGMENT
??_C@_15FBCKGPDG@?$AA?$FO?$AAc?$AA?$AA@ DB '^', 00H, 'c', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsCyan@@YAXXZ
text$yc	SEGMENT
??__EsCyan@@YAXXZ PROC					; `dynamic initializer for 'sCyan'', COMDAT

; 77   : const tstring sCyan		(_T("^c"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15FBCKGPDG@?$AA?$FO?$AAc?$AA?$AA@
	mov	ecx, OFFSET _sCyan
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsCyan@@YAXXZ		; `dynamic atexit destructor for 'sCyan''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsCyan@@YAXXZ ENDP					; `dynamic initializer for 'sCyan''
text$yc	ENDS
PUBLIC	??_C@_15BDIGJHEH@?$AA?$FO?$AAp?$AA?$AA@		; `string'
;	COMDAT ??_C@_15BDIGJHEH@?$AA?$FO?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_15BDIGJHEH@?$AA?$FO?$AAp?$AA?$AA@ DB '^', 00H, 'p', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPurple@@YAXXZ
text$yc	SEGMENT
??__EsPurple@@YAXXZ PROC				; `dynamic initializer for 'sPurple'', COMDAT

; 78   : const tstring sPurple	(_T("^p"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15BDIGJHEH@?$AA?$FO?$AAp?$AA?$AA@
	mov	ecx, OFFSET _sPurple
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPurple@@YAXXZ		; `dynamic atexit destructor for 'sPurple''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPurple@@YAXXZ ENDP				; `dynamic initializer for 'sPurple''
text$yc	ENDS
PUBLIC	??_C@_15BLPMNAIO@?$AA?$FO?$AAo?$AA?$AA@		; `string'
;	COMDAT ??_C@_15BLPMNAIO@?$AA?$FO?$AAo?$AA?$AA@
CONST	SEGMENT
??_C@_15BLPMNAIO@?$AA?$FO?$AAo?$AA?$AA@ DB '^', 00H, 'o', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsOrange@@YAXXZ
text$yc	SEGMENT
??__EsOrange@@YAXXZ PROC				; `dynamic initializer for 'sOrange'', COMDAT

; 79   : const tstring sOrange	(_T("^o"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15BLPMNAIO@?$AA?$FO?$AAo?$AA?$AA@
	mov	ecx, OFFSET _sOrange
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsOrange@@YAXXZ		; `dynamic atexit destructor for 'sOrange''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsOrange@@YAXXZ ENDP				; `dynamic initializer for 'sOrange''
text$yc	ENDS
PUBLIC	??_C@_15DGONMIJL@?$AA?$FO?$AAv?$AA?$AA@		; `string'
;	COMDAT ??_C@_15DGONMIJL@?$AA?$FO?$AAv?$AA?$AA@
CONST	SEGMENT
??_C@_15DGONMIJL@?$AA?$FO?$AAv?$AA?$AA@ DB '^', 00H, 'v', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsGray@@YAXXZ
text$yc	SEGMENT
??__EsGray@@YAXXZ PROC					; `dynamic initializer for 'sGray'', COMDAT

; 80   : const tstring sGray		(_T("^v"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15DGONMIJL@?$AA?$FO?$AAv?$AA?$AA@
	mov	ecx, OFFSET _sGray
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsGray@@YAXXZ		; `dynamic atexit destructor for 'sGray''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsGray@@YAXXZ ENDP					; `dynamic initializer for 'sGray''
text$yc	ENDS
PUBLIC	??_C@_15JMOEAABA@?$AA?$FO?$AAt?$AA?$AA@		; `string'
;	COMDAT ??_C@_15JMOEAABA@?$AA?$FO?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_15JMOEAABA@?$AA?$FO?$AAt?$AA?$AA@ DB '^', 00H, 't', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsTeal@@YAXXZ
text$yc	SEGMENT
??__EsTeal@@YAXXZ PROC					; `dynamic initializer for 'sTeal'', COMDAT

; 81   : const tstring sTeal		(_T("^t"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15JMOEAABA@?$AA?$FO?$AAt?$AA?$AA@
	mov	ecx, OFFSET _sTeal
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsTeal@@YAXXZ		; `dynamic atexit destructor for 'sTeal''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsTeal@@YAXXZ ENDP					; `dynamic initializer for 'sTeal''
text$yc	ENDS
PUBLIC	??_C@_15NOEIPIGB@?$AA?$FO?$AAg?$AA?$AA@		; `string'
;	COMDAT ??_C@_15NOEIPIGB@?$AA?$FO?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_15NOEIPIGB@?$AA?$FO?$AAg?$AA?$AA@ DB '^', 00H, 'g', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsGreen@@YAXXZ
text$yc	SEGMENT
??__EsGreen@@YAXXZ PROC					; `dynamic initializer for 'sGreen'', COMDAT

; 82   : const tstring sGreen	(_T("^g"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15NOEIPIGB@?$AA?$FO?$AAg?$AA?$AA@
	mov	ecx, OFFSET _sGreen
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsGreen@@YAXXZ		; `dynamic atexit destructor for 'sGreen''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsGreen@@YAXXZ ENDP					; `dynamic initializer for 'sGreen''
text$yc	ENDS
PUBLIC	??_C@_15LBPFBIAF@?$AA?$FO?$AAm?$AA?$AA@		; `string'
;	COMDAT ??_C@_15LBPFBIAF@?$AA?$FO?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_15LBPFBIAF@?$AA?$FO?$AAm?$AA?$AA@ DB '^', 00H, 'm', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsMagenta@@YAXXZ
text$yc	SEGMENT
??__EsMagenta@@YAXXZ PROC				; `dynamic initializer for 'sMagenta'', COMDAT

; 83   : const tstring sMagenta	(_T("^m"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15LBPFBIAF@?$AA?$FO?$AAm?$AA?$AA@
	mov	ecx, OFFSET _sMagenta
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsMagenta@@YAXXZ		; `dynamic atexit destructor for 'sMagenta''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsMagenta@@YAXXZ ENDP				; `dynamic initializer for 'sMagenta''
text$yc	ENDS
PUBLIC	??_C@_15KDEALHOL@?$AA?$FO?$AAn?$AA?$AA@		; `string'
;	COMDAT ??_C@_15KDEALHOL@?$AA?$FO?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_15KDEALHOL@?$AA?$FO?$AAn?$AA?$AA@ DB '^', 00H, 'n', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsBrown@@YAXXZ
text$yc	SEGMENT
??__EsBrown@@YAXXZ PROC					; `dynamic initializer for 'sBrown'', COMDAT

; 84   : const tstring sBrown	(_T("^n"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15KDEALHOL@?$AA?$FO?$AAn?$AA?$AA@
	mov	ecx, OFFSET _sBrown
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsBrown@@YAXXZ		; `dynamic atexit destructor for 'sBrown''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsBrown@@YAXXZ ENDP					; `dynamic initializer for 'sBrown''
text$yc	ENDS
PUBLIC	??_C@_15GOIONIMN@?$AA?$FO?$AAy?$AA?$AA@		; `string'
;	COMDAT ??_C@_15GOIONIMN@?$AA?$FO?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_15GOIONIMN@?$AA?$FO?$AAy?$AA?$AA@ DB '^', 00H, 'y', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsYellow@@YAXXZ
text$yc	SEGMENT
??__EsYellow@@YAXXZ PROC				; `dynamic initializer for 'sYellow'', COMDAT

; 85   : const tstring sYellow	(_T("^y"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15GOIONIMN@?$AA?$FO?$AAy?$AA?$AA@
	mov	ecx, OFFSET _sYellow
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsYellow@@YAXXZ		; `dynamic atexit destructor for 'sYellow''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsYellow@@YAXXZ ENDP				; `dynamic initializer for 'sYellow''
text$yc	ENDS
PUBLIC	??_C@_15LJIPFPMM@?$AA?$FO?$AAr?$AA?$AA@		; `string'
;	COMDAT ??_C@_15LJIPFPMM@?$AA?$FO?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_15LJIPFPMM@?$AA?$FO?$AAr?$AA?$AA@ DB '^', 00H, 'r', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsRed@@YAXXZ
text$yc	SEGMENT
??__EsRed@@YAXXZ PROC					; `dynamic initializer for 'sRed'', COMDAT

; 87   : const tstring sRed		(_T("^r"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15LJIPFPMM@?$AA?$FO?$AAr?$AA?$AA@
	mov	ecx, OFFSET _sRed
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsRed@@YAXXZ			; `dynamic atexit destructor for 'sRed''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsRed@@YAXXZ ENDP					; `dynamic initializer for 'sRed''
text$yc	ENDS
PUBLIC	??_C@_15IOFBKPPO@?$AA?$FO?$AAw?$AA?$AA@		; `string'
;	COMDAT ??_C@_15IOFBKPPO@?$AA?$FO?$AAw?$AA?$AA@
CONST	SEGMENT
??_C@_15IOFBKPPO@?$AA?$FO?$AAw?$AA?$AA@ DB '^', 00H, 'w', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsWhite@@YAXXZ
text$yc	SEGMENT
??__EsWhite@@YAXXZ PROC					; `dynamic initializer for 'sWhite'', COMDAT

; 88   : const tstring sWhite	(_T("^w"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15IOFBKPPO@?$AA?$FO?$AAw?$AA?$AA@
	mov	ecx, OFFSET _sWhite
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsWhite@@YAXXZ		; `dynamic atexit destructor for 'sWhite''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsWhite@@YAXXZ ENDP					; `dynamic initializer for 'sWhite''
text$yc	ENDS
PUBLIC	??_C@_15JEJOEHNJ@?$AA?$FO?$AAk?$AA?$AA@		; `string'
;	COMDAT ??_C@_15JEJOEHNJ@?$AA?$FO?$AAk?$AA?$AA@
CONST	SEGMENT
??_C@_15JEJOEHNJ@?$AA?$FO?$AAk?$AA?$AA@ DB '^', 00H, 'k', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsBlack@@YAXXZ
text$yc	SEGMENT
??__EsBlack@@YAXXZ PROC					; `dynamic initializer for 'sBlack'', COMDAT

; 89   : const tstring sBlack	(_T("^k"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15JEJOEHNJ@?$AA?$FO?$AAk?$AA?$AA@
	mov	ecx, OFFSET _sBlack
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsBlack@@YAXXZ		; `dynamic atexit destructor for 'sBlack''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsBlack@@YAXXZ ENDP					; `dynamic initializer for 'sBlack''
text$yc	ENDS
PUBLIC	??_C@_15LHDGHIIB@?$AA?$FO?$AA?$CK?$AA?$AA@	; `string'
;	COMDAT ??_C@_15LHDGHIIB@?$AA?$FO?$AA?$CK?$AA?$AA@
CONST	SEGMENT
??_C@_15LHDGHIIB@?$AA?$FO?$AA?$CK?$AA?$AA@ DB '^', 00H, '*', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsNoColor@@YAXXZ
text$yc	SEGMENT
??__EsNoColor@@YAXXZ PROC				; `dynamic initializer for 'sNoColor'', COMDAT

; 90   : const tstring sNoColor	(_T("^*"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15LHDGHIIB@?$AA?$FO?$AA?$CK?$AA?$AA@
	mov	ecx, OFFSET _sNoColor
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsNoColor@@YAXXZ		; `dynamic atexit destructor for 'sNoColor''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsNoColor@@YAXXZ ENDP				; `dynamic initializer for 'sNoColor''
text$yc	ENDS
PUBLIC	??_C@_17IHKOCIHJ@?$AA?$FO?$AA?$CB?$AAb?$AA?$AA@	; `string'
;	COMDAT ??_C@_17IHKOCIHJ@?$AA?$FO?$AA?$CB?$AAb?$AA?$AA@
CONST	SEGMENT
??_C@_17IHKOCIHJ@?$AA?$FO?$AA?$CB?$AAb?$AA?$AA@ DB '^', 00H, '!', 00H, 'b'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCBlue@@YAXXZ
text$yc	SEGMENT
??__EsPCBlue@@YAXXZ PROC				; `dynamic initializer for 'sPCBlue'', COMDAT

; 93   : const tstring sPCBlue		(_T("^!b"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17IHKOCIHJ@?$AA?$FO?$AA?$CB?$AAb?$AA?$AA@
	mov	ecx, OFFSET _sPCBlue
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCBlue@@YAXXZ		; `dynamic atexit destructor for 'sPCBlue''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCBlue@@YAXXZ ENDP				; `dynamic initializer for 'sPCBlue''
text$yc	ENDS
PUBLIC	??_C@_17PCNMCADK@?$AA?$FO?$AA?$CB?$AAt?$AA?$AA@	; `string'
;	COMDAT ??_C@_17PCNMCADK@?$AA?$FO?$AA?$CB?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_17PCNMCADK@?$AA?$FO?$AA?$CB?$AAt?$AA?$AA@ DB '^', 00H, '!', 00H, 't'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCTeal@@YAXXZ
text$yc	SEGMENT
??__EsPCTeal@@YAXXZ PROC				; `dynamic initializer for 'sPCTeal'', COMDAT

; 94   : const tstring sPCTeal		(_T("^!t"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17PCNMCADK@?$AA?$FO?$AA?$CB?$AAt?$AA?$AA@
	mov	ecx, OFFSET _sPCTeal
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCTeal@@YAXXZ		; `dynamic atexit destructor for 'sPCTeal''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCTeal@@YAXXZ ENDP				; `dynamic initializer for 'sPCTeal''
text$yc	ENDS
PUBLIC	??_C@_17HNLOLHGN@?$AA?$FO?$AA?$CB?$AAp?$AA?$AA@	; `string'
;	COMDAT ??_C@_17HNLOLHGN@?$AA?$FO?$AA?$CB?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_17HNLOLHGN@?$AA?$FO?$AA?$CB?$AAp?$AA?$AA@ DB '^', 00H, '!', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCPurple@@YAXXZ
text$yc	SEGMENT
??__EsPCPurple@@YAXXZ PROC				; `dynamic initializer for 'sPCPurple'', COMDAT

; 95   : const tstring sPCPurple		(_T("^!p"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17HNLOLHGN@?$AA?$FO?$AA?$CB?$AAp?$AA?$AA@
	mov	ecx, OFFSET _sPCPurple
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCPurple@@YAXXZ		; `dynamic atexit destructor for 'sPCPurple''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCPurple@@YAXXZ ENDP				; `dynamic initializer for 'sPCPurple''
text$yc	ENDS
PUBLIC	??_C@_17LGPIOH@?$AA?$FO?$AA?$CB?$AAy?$AA?$AA@	; `string'
;	COMDAT ??_C@_17LGPIOH@?$AA?$FO?$AA?$CB?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_17LGPIOH@?$AA?$FO?$AA?$CB?$AAy?$AA?$AA@ DB '^', 00H, '!', 00H, 'y', 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCYellow@@YAXXZ
text$yc	SEGMENT
??__EsPCYellow@@YAXXZ PROC				; `dynamic initializer for 'sPCYellow'', COMDAT

; 96   : const tstring sPCYellow		(_T("^!y"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17LGPIOH@?$AA?$FO?$AA?$CB?$AAy?$AA?$AA@
	mov	ecx, OFFSET _sPCYellow
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCYellow@@YAXXZ		; `dynamic atexit destructor for 'sPCYellow''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCYellow@@YAXXZ ENDP				; `dynamic initializer for 'sPCYellow''
text$yc	ENDS
PUBLIC	??_C@_17HFMEPAKE@?$AA?$FO?$AA?$CB?$AAo?$AA?$AA@	; `string'
;	COMDAT ??_C@_17HFMEPAKE@?$AA?$FO?$AA?$CB?$AAo?$AA?$AA@
CONST	SEGMENT
??_C@_17HFMEPAKE@?$AA?$FO?$AA?$CB?$AAo?$AA?$AA@ DB '^', 00H, '!', 00H, 'o'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCOrange@@YAXXZ
text$yc	SEGMENT
??__EsPCOrange@@YAXXZ PROC				; `dynamic initializer for 'sPCOrange'', COMDAT

; 97   : const tstring sPCOrange		(_T("^!o"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17HFMEPAKE@?$AA?$FO?$AA?$CB?$AAo?$AA?$AA@
	mov	ecx, OFFSET _sPCOrange
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCOrange@@YAXXZ		; `dynamic atexit destructor for 'sPCOrange''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCOrange@@YAXXZ ENDP				; `dynamic initializer for 'sPCOrange''
text$yc	ENDS
PUBLIC	??_C@_17FAKPKPHI@?$AA?$FO?$AA?$CB?$AAi?$AA?$AA@	; `string'
;	COMDAT ??_C@_17FAKPKPHI@?$AA?$FO?$AA?$CB?$AAi?$AA?$AA@
CONST	SEGMENT
??_C@_17FAKPKPHI@?$AA?$FO?$AA?$CB?$AAi?$AA?$AA@ DB '^', 00H, '!', 00H, 'i'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCPink@@YAXXZ
text$yc	SEGMENT
??__EsPCPink@@YAXXZ PROC				; `dynamic initializer for 'sPCPink'', COMDAT

; 98   : const tstring sPCPink		(_T("^!i"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17FAKPKPHI@?$AA?$FO?$AA?$CB?$AAi?$AA?$AA@
	mov	ecx, OFFSET _sPCPink
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCPink@@YAXXZ		; `dynamic atexit destructor for 'sPCPink''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCPink@@YAXXZ ENDP				; `dynamic initializer for 'sPCPink''
text$yc	ENDS
PUBLIC	??_C@_17FINFOILB@?$AA?$FO?$AA?$CB?$AAv?$AA?$AA@	; `string'
;	COMDAT ??_C@_17FINFOILB@?$AA?$FO?$AA?$CB?$AAv?$AA?$AA@
CONST	SEGMENT
??_C@_17FINFOILB@?$AA?$FO?$AA?$CB?$AAv?$AA?$AA@ DB '^', 00H, '!', 00H, 'v'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCGray@@YAXXZ
text$yc	SEGMENT
??__EsPCGray@@YAXXZ PROC				; `dynamic initializer for 'sPCGray'', COMDAT

; 99   : const tstring sPCGray		(_T("^!v"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17FINFOILB@?$AA?$FO?$AA?$CB?$AAv?$AA?$AA@
	mov	ecx, OFFSET _sPCGray
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCGray@@YAXXZ		; `dynamic atexit destructor for 'sPCGray''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCGray@@YAXXZ ENDP				; `dynamic initializer for 'sPCGray''
text$yc	ENDS
PUBLIC	??_C@_17GHHBFPEK@?$AA?$FO?$AA?$CB?$AAl?$AA?$AA@	; `string'
;	COMDAT ??_C@_17GHHBFPEK@?$AA?$FO?$AA?$CB?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_17GHHBFPEK@?$AA?$FO?$AA?$CB?$AAl?$AA?$AA@ DB '^', 00H, '!', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCLightBlue@@YAXXZ
text$yc	SEGMENT
??__EsPCLightBlue@@YAXXZ PROC				; `dynamic initializer for 'sPCLightBlue'', COMDAT

; 100  : const tstring sPCLightBlue	(_T("^!l"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17GHHBFPEK@?$AA?$FO?$AA?$CB?$AAl?$AA?$AA@
	mov	ecx, OFFSET _sPCLightBlue
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCLightBlue@@YAXXZ		; `dynamic atexit destructor for 'sPCLightBlue''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCLightBlue@@YAXXZ ENDP				; `dynamic initializer for 'sPCLightBlue''
text$yc	ENDS
PUBLIC	??_C@_17LAHANIEL@?$AA?$FO?$AA?$CB?$AAg?$AA?$AA@	; `string'
;	COMDAT ??_C@_17LAHANIEL@?$AA?$FO?$AA?$CB?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_17LAHANIEL@?$AA?$FO?$AA?$CB?$AAg?$AA?$AA@ DB '^', 00H, '!', 00H, 'g'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCDarkGreen@@YAXXZ
text$yc	SEGMENT
??__EsPCDarkGreen@@YAXXZ PROC				; `dynamic initializer for 'sPCDarkGreen'', COMDAT

; 101  : const tstring sPCDarkGreen	(_T("^!g"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17LAHANIEL@?$AA?$FO?$AA?$CB?$AAg?$AA?$AA@
	mov	ecx, OFFSET _sPCDarkGreen
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCDarkGreen@@YAXXZ		; `dynamic atexit destructor for 'sPCDarkGreen''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCDarkGreen@@YAXXZ ENDP				; `dynamic initializer for 'sPCDarkGreen''
text$yc	ENDS
PUBLIC	??_C@_17MNHIJHMB@?$AA?$FO?$AA?$CB?$AAn?$AA?$AA@	; `string'
;	COMDAT ??_C@_17MNHIJHMB@?$AA?$FO?$AA?$CB?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_17MNHIJHMB@?$AA?$FO?$AA?$CB?$AAn?$AA?$AA@ DB '^', 00H, '!', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EsPCBrown@@YAXXZ
text$yc	SEGMENT
??__EsPCBrown@@YAXXZ PROC				; `dynamic initializer for 'sPCBrown'', COMDAT

; 102  : const tstring sPCBrown		(_T("^!n"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_17MNHIJHMB@?$AA?$FO?$AA?$CB?$AAn?$AA?$AA@
	mov	ecx, OFFSET _sPCBrown
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FsPCBrown@@YAXXZ		; `dynamic atexit destructor for 'sPCBrown''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPCBrown@@YAXXZ ENDP				; `dynamic initializer for 'sPCBrown''
text$yc	ENDS
PUBLIC	__real@3e9eb852
PUBLIC	__real@3e2e147b
PUBLIC	__real@3ca3d70a
PUBLIC	__real@3ec28f5c
PUBLIC	__real@3e8f5c29
PUBLIC	__real@3efae148
PUBLIC	__real@3f733333
PUBLIC	__real@3f147ae1
PUBLIC	__real@3f170a3d
PUBLIC	__real@3eb851ec
PUBLIC	__real@3f30a3d7
PUBLIC	__real@3f0a3d71
PUBLIC	__real@3d75c28f
PUBLIC	__real@3f7d70a4
PUBLIC	__real@3ea8f5c3
PUBLIC	__real@3f028f5c
PUBLIC	__real@3de147ae
PUBLIC	__real@3f666666
PUBLIC	__real@3f3ae148
PUBLIC	__real@3e851eb8
PUBLIC	__real@3f400000
PUBLIC	__real@3f266666
PUBLIC	__real@3f000000
PUBLIC	__real@3e99999a
PUBLIC	__real@3e23d70a
PUBLIC	__real@3c23d70a
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
EXTRN	__imp_??0?$CVec4@M@@QAE@MMMM@Z:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@3e9eb852
CONST	SEGMENT
__real@3e9eb852 DD 03e9eb852r			; 0.31
CONST	ENDS
;	COMDAT __real@3e2e147b
CONST	SEGMENT
__real@3e2e147b DD 03e2e147br			; 0.17
CONST	ENDS
;	COMDAT __real@3ca3d70a
CONST	SEGMENT
__real@3ca3d70a DD 03ca3d70ar			; 0.02
CONST	ENDS
;	COMDAT __real@3ec28f5c
CONST	SEGMENT
__real@3ec28f5c DD 03ec28f5cr			; 0.38
CONST	ENDS
;	COMDAT __real@3e8f5c29
CONST	SEGMENT
__real@3e8f5c29 DD 03e8f5c29r			; 0.28
CONST	ENDS
;	COMDAT __real@3efae148
CONST	SEGMENT
__real@3efae148 DD 03efae148r			; 0.49
CONST	ENDS
;	COMDAT __real@3f733333
CONST	SEGMENT
__real@3f733333 DD 03f733333r			; 0.95
CONST	ENDS
;	COMDAT __real@3f147ae1
CONST	SEGMENT
__real@3f147ae1 DD 03f147ae1r			; 0.58
CONST	ENDS
;	COMDAT __real@3f170a3d
CONST	SEGMENT
__real@3f170a3d DD 03f170a3dr			; 0.59
CONST	ENDS
;	COMDAT __real@3eb851ec
CONST	SEGMENT
__real@3eb851ec DD 03eb851ecr			; 0.36
CONST	ENDS
;	COMDAT __real@3f30a3d7
CONST	SEGMENT
__real@3f30a3d7 DD 03f30a3d7r			; 0.69
CONST	ENDS
;	COMDAT __real@3f0a3d71
CONST	SEGMENT
__real@3f0a3d71 DD 03f0a3d71r			; 0.54
CONST	ENDS
;	COMDAT __real@3d75c28f
CONST	SEGMENT
__real@3d75c28f DD 03d75c28fr			; 0.06
CONST	ENDS
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
CONST	ENDS
;	COMDAT __real@3ea8f5c3
CONST	SEGMENT
__real@3ea8f5c3 DD 03ea8f5c3r			; 0.33
CONST	ENDS
;	COMDAT __real@3f028f5c
CONST	SEGMENT
__real@3f028f5c DD 03f028f5cr			; 0.51
CONST	ENDS
;	COMDAT __real@3de147ae
CONST	SEGMENT
__real@3de147ae DD 03de147aer			; 0.11
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f3ae148
CONST	SEGMENT
__real@3f3ae148 DD 03f3ae148r			; 0.73
CONST	ENDS
;	COMDAT __real@3e851eb8
CONST	SEGMENT
__real@3e851eb8 DD 03e851eb8r			; 0.26
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f266666
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e23d70a
CONST	SEGMENT
__real@3e23d70a DD 03e23d70ar			; 0.16
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__Eg_v4Colors@@YAXXZ
text$yc	SEGMENT
??__Eg_v4Colors@@YAXXZ PROC				; `dynamic initializer for 'g_v4Colors'', COMDAT

; 106  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 107  : 	BLACK,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 108  : 	BLUE,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+16
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 109  : 	BROWN,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3c23d70a
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e23d70a
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e99999a
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+32
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 110  : 	CYAN,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+48
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 111  : 	GRAY,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+64
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 112  : 	GREEN,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+80
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 113  : 	LIME,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+96
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 114  : 	MAGENTA,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+112
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 115  : 	MAROON,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+128
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 116  : 	NAVY,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+144
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 117  : 	OLIVE,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+160
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 118  : 	ORANGE,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f266666
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+176
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 119  : 	PURPLE,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+192
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 120  : 	RED,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+208
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 121  : 	SILVER,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f400000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f400000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f400000
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+224
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 122  : 	TEAL,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+240
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 123  : 	WHITE,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+256
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 124  : 	YELLOW,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+272
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 125  : 	
; 126  : 	PCBLUE,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e851eb8
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+288
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 127  : 	PCTEAL,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f3ae148
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f666666
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3de147ae
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+304
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 128  : 	PCPURPLE,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f028f5c
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3ea8f5c3
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+320
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 129  : 	PCYELLOW,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f7d70a4
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+336
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 130  : 	PCORANGE,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3d75c28f
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f0a3d71
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+352
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 131  : 	PCPINK,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f30a3d7
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3eb851ec
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f666666
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+368
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 132  : 	PCGRAY,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f170a3d
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f170a3d
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f147ae1
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+384
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 133  : 	PCLIGHTBLUE,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f733333
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f400000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3efae148
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+400
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 134  : 	PCDARKGREEN,

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e8f5c29
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3ec28f5c
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3d75c28f
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+416
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z

; 135  : 	PCBROWN	
; 136  : };

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3ca3d70a
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e2e147b
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e9eb852
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET _g_v4Colors+432
	call	DWORD PTR __imp_??0?$CVec4@M@@QAE@MMMM@Z
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eg_v4Colors@@YAXXZ ENDP				; `dynamic initializer for 'g_v4Colors''
text$yc	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
PUBLIC	??_C@_02PCIJFNDE@?$AN?6?$AA@			; `string'
;	COMDAT ??_C@_02PCIJFNDE@?$AN?6?$AA@
CONST	SEGMENT
??_C@_02PCIJFNDE@?$AN?6?$AA@ DB 0dH, 0aH, 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__ELINEBREAK@@YAXXZ
text$yc	SEGMENT
??__ELINEBREAK@@YAXXZ PROC				; `dynamic initializer for 'LINEBREAK'', COMDAT

; 213  : const string LINEBREAK("\x0d\x0a");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_02PCIJFNDE@?$AN?6?$AA@
	mov	ecx, OFFSET _LINEBREAK
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
	push	OFFSET ??__FLINEBREAK@@YAXXZ		; `dynamic atexit destructor for 'LINEBREAK''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ELINEBREAK@@YAXXZ ENDP				; `dynamic initializer for 'LINEBREAK''
text$yc	ENDS
PUBLIC	??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ ; std::_String_val<char,K2StringAllocator<char> >::~_String_val<char,K2StringAllocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Tidy
PUBLIC	??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z ; std::_String_val<char,K2StringAllocator<char> >::_String_val<char,K2StringAllocator<char> >
PUBLIC	??0?$K2StringAllocator@D@@QAE@XZ		; K2StringAllocator<char>::K2StringAllocator<char>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 8\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z
_TEXT	SEGMENT
tv87 = -92						; size = 4
tv86 = -88						; size = 4
$T98856 = -84						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >, COMDAT
; _this$ = ecx

; 650  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T98856[ebp], esp
	call	??0?$K2StringAllocator@D@@QAE@XZ	; K2StringAllocator<char>::K2StringAllocator<char>
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z ; std::_String_val<char,K2StringAllocator<char> >::_String_val<char,K2StringAllocator<char> >
	mov	DWORD PTR tv87[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 651  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Tidy

; 652  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign

; 653  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
PUBLIC	??1?$K2StringAllocator@D@@QAE@XZ		; K2StringAllocator<char>::~K2StringAllocator<char>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ PROC ; std::_String_val<char,K2StringAllocator<char> >::~_String_val<char,K2StringAllocator<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$K2StringAllocator@D@@QAE@XZ	; K2StringAllocator<char>::~K2StringAllocator<char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_String_base@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1_String_base@std@@QAE@XZ
__ehhandler$??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ ENDP ; std::_String_val<char,K2StringAllocator<char> >::~_String_val<char,K2StringAllocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign
EXTRN	__imp_?length@?$char_traits@D@std@@SAIPBD@Z:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign, COMDAT
; _this$ = ecx

; 1069 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1070 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_?length@?$char_traits@D@std@@SAIPBD@Z
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign

; 1071 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Eos
PUBLIC	?deallocate@?$K2StringAllocator@D@@QAEXPADI@Z	; K2StringAllocator<char>::deallocate
PUBLIC	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Ptr$83466 = -8					; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2066 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2067 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy@2
	jmp	SHORT $LN3@Tidy@2
$LN4@Tidy@2:

; 2068 : 			;
; 2069 : 		else if (_BUF_SIZE <= _Myres)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 16			; 00000010H
	jb	SHORT $LN3@Tidy@2

; 2070 : 			{	// copy any leftovers to small buffer and deallocate
; 2071 : 			_Elem *_Ptr = _Bx._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Ptr$83466[ebp], ecx

; 2072 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy@2

; 2073 : 				_Traits_helper::copy_s<_Traits>(_Bx._Buf, _BUF_SIZE, _Ptr, _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$83466[ebp]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H
$LN1@Tidy@2:

; 2074 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$83466[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$K2StringAllocator@D@@QAEXPADI@Z ; K2StringAllocator<char>::deallocate
$LN3@Tidy@2:

; 2075 : 			}
; 2076 : 		_Myres = _BUF_SIZE - 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 15			; 0000000fH

; 2077 : 		_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Eos

; 2078 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$K2StringAllocator@D@@QAE@ABV0@@Z		; K2StringAllocator<char>::K2StringAllocator<char>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z$1
__ehfuncinfo$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z PROC ; std::_String_val<char,K2StringAllocator<char> >::_String_val<char,K2StringAllocator<char> >, COMDAT
; _this$ = ecx

; 471  : 		{	// construct allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_String_base@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$K2StringAllocator@D@@QAE@ABV0@@Z	; K2StringAllocator<char>::K2StringAllocator<char>

; 472  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??1?$K2StringAllocator@D@@QAE@XZ	; K2StringAllocator<char>::~K2StringAllocator<char>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z$0:
	lea	ecx, DWORD PTR __Al$[ebp]
	jmp	??1?$K2StringAllocator@D@@QAE@XZ	; K2StringAllocator<char>::~K2StringAllocator<char>
__unwindfunclet$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1_String_base@std@@QAE@XZ
__ehhandler$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@DV?$K2StringAllocator@D@@@std@@IAE@V?$K2StringAllocator@D@@@Z ENDP ; std::_String_val<char,K2StringAllocator<char> >::_String_val<char,K2StringAllocator<char> >
EXTRN	__imp_??0?$allocator@D@std@@QAE@XZ:PROC
; Function compile flags: /Odtp /ZI
; File c:\code\hon\src\k2\k2_stl_allocator.h
;	COMDAT ??0?$K2StringAllocator@D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$K2StringAllocator@D@@QAE@XZ PROC			; K2StringAllocator<char>::K2StringAllocator<char>, COMDAT
; _this$ = ecx

; 78   : 	K2StringAllocator()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$allocator@D@std@@QAE@XZ

; 79   : 	{
; 80   : 		// ensure that the memory manager is initialized.
; 81   : 		CMemManager::GetInstance();

	call	?GetInstance@CMemManager@@SAPAV1@XZ	; CMemManager::GetInstance

; 82   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$K2StringAllocator@D@@QAE@XZ ENDP			; K2StringAllocator<char>::K2StringAllocator<char>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??1?$K2StringAllocator@D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$K2StringAllocator@D@@QAE@XZ PROC			; K2StringAllocator<char>::~K2StringAllocator<char>, COMDAT
; _this$ = ecx

; 88   : 	~K2StringAllocator() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$K2StringAllocator@D@@QAE@XZ ENDP			; K2StringAllocator<char>::~K2StringAllocator<char>
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Grow
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Inside
; Function compile flags: /Odtp /ZI
; File c:\program files\microsoft visual studio 8\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign, COMDAT
; _this$ = ecx

; 1056 : 		{	// assign [_Ptr, _Ptr + _Num)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1057 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@3

; 1058 : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign
	jmp	SHORT $LN3@assign@3
$LN2@assign@3:

; 1059 : 
; 1060 : 		if (_Grow(_Num))

	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign@3

; 1061 : 			{	// make room and assign new stuff
; 1062 : 			_Traits_helper::copy_s<_Traits>(_Myptr(), _Myres, _Ptr, _Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	push	eax
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H

; 1063 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Eos
$LN1@assign@3:

; 1064 : 			}
; 1065 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign@3:

; 1066 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IBEPBDXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::erase
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@2IB ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::npos
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::size
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::npos
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign, COMDAT
; _this$ = ecx

; 1038 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1039 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign@4

; 1040 : 			_String_base::_Xran();	// _Roff off end

	call	DWORD PTR __imp_?_Xran@_String_base@std@@SAXXZ
$LN5@assign@4:

; 1041 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1042 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign@4

; 1043 : 			_Num = _Count;	// trim _Num to size

	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
$LN4@assign@4:

; 1044 : 
; 1045 : 		if (this == &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign@4

; 1046 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@2IB ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::erase
	jmp	SHORT $LN2@assign@4
$LN3@assign@4:

; 1047 : 		else if (_Grow(_Num))

	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@4

; 1048 : 			{	// make room and assign new stuff
; 1049 : 			_Traits_helper::copy_s<_Traits>(_Myptr(), _Myres, _Right._Myptr() + _Roff, _Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IBEPBDXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	push	eax
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H

; 1050 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Eos
$LN2@assign@4:

; 1051 : 			}
; 1052 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1053 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::assign
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IBEPBDXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2092 : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2093 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 16			; 00000010H
	jb	SHORT $LN3@Myptr@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@Myptr@3
$LN3@Myptr@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv70[ebp], eax
$LN4@Myptr@3:
	mov	eax, DWORD PTR tv70[ebp]

; 2094 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::move_s<std::char_traits<char> >
; Function compile flags: /Odtp /ZI
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$85182 = -8					; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::erase, COMDAT
; _this$ = ecx

; 1240 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1241 : 		if (_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase@2

; 1242 : 			_String_base::_Xran();	// _Off off end

	call	DWORD PTR __imp_?_Xran@_String_base@std@@SAXXZ
$LN3@erase@2:

; 1243 : 		if (_Mysize - _Off < _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase@2

; 1244 : 			_Count = _Mysize - _Off;	// trim _Count

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN2@erase@2:

; 1245 : 		if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase@2

; 1246 : 			{	// move elements down
; 1247 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off, _Myres - _Off, _Myptr() + _Off + _Count,
; 1248 : 				_Mysize - _Off - _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	sub	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::move_s<std::char_traits<char> >
	add	esp, 16					; 00000010H

; 1249 : 			size_type _Newsize = _Mysize - _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$85182[ebp], ecx

; 1250 : 			_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$85182[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Eos
$LN1@erase@2:

; 1251 : 			}
; 1252 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1253 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::erase
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::size, COMDAT
; _this$ = ecx

; 1636 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1637 : 		return (_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]

; 1638 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::size
_TEXT	ENDS
EXTRN	__imp_?assign@?$char_traits@D@std@@SAXAADABD@Z:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T98908 = -69						; size = 1
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2030 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2031 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T98908[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+24], ecx
	lea	edx, DWORD PTR $T98908[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	DWORD PTR __imp_?assign@?$char_traits@D@std@@SAXAADABD@Z
	add	esp, 8

; 2032 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Copy
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::max_size
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
tv80 = -72						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2036 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2037 : 			if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow@2

; 2038 : 			_String_base::_Xlen();	// result too long

	call	DWORD PTR __imp_?_Xlen@_String_base@std@@SAXXZ
$LN6@Grow@2:

; 2039 : 		if (_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow@2

; 2040 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Copy
	jmp	SHORT $LN4@Grow@2
$LN5@Grow@2:

; 2041 : 		else if (_Trim && _Newsize < _BUF_SIZE)

	movzx	eax, BYTE PTR __Trim$[ebp]
	test	eax, eax
	je	SHORT $LN3@Grow@2
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow@2

; 2042 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2043 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jae	SHORT $LN9@Grow@2
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN10@Grow@2
$LN9@Grow@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR tv80[ebp], ecx
$LN10@Grow@2:
	mov	edx, DWORD PTR tv80[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow@2
$LN3@Grow@2:

; 2044 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow@2

; 2045 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Eos
$LN4@Grow@2:

; 2046 : 		return (0 < _Newsize);	// return true only if more work to do

	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax

; 2047 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Grow
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2087 : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2088 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 16			; 00000010H
	jb	SHORT $LN3@Myptr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@Myptr@4
$LN3@Myptr@4:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv70[ebp], eax
$LN4@Myptr@4:
	mov	eax, DWORD PTR tv70[ebp]

; 2089 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
_TEXT	ENDS
EXTRN	__imp_??0?$allocator@D@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /ZI
; File c:\code\hon\src\k2\k2_stl_allocator.h
;	COMDAT ??0?$K2StringAllocator@D@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_al$ = 8						; size = 4
??0?$K2StringAllocator@D@@QAE@ABV0@@Z PROC		; K2StringAllocator<char>::K2StringAllocator<char>, COMDAT
; _this$ = ecx

; 86   : 	K2StringAllocator(const K2StringAllocator &al) : std::allocator<T>(al) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$allocator@D@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$K2StringAllocator@D@@QAE@ABV0@@Z ENDP		; K2StringAllocator<char>::K2StringAllocator<char>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$K2StringAllocator@D@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$K2StringAllocator@D@@QAEXPADI@Z PROC	; K2StringAllocator<char>::deallocate, COMDAT
; _this$ = ecx

; 98   : 	void	deallocate(pointer _Ptr, size_type)		{ MemManager.Deallocate(_Ptr, "ctx_STL_string"); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	162					; 000000a2H
	push	OFFSET ??_C@_0CC@PDHCCDLE@c?3?2code?2hon?2src?2k2?2c_memmanager?4@
	push	3
	push	OFFSET ??_C@_0P@CDENJMCL@ctx_STL_string?$AA@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_?Deallocate@CMemManager@@SAXPAXPBDW4MemoryType@@1F@Z
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$K2StringAllocator@D@@QAEXPADI@Z ENDP	; K2StringAllocator<char>::deallocate
_TEXT	ENDS
EXTRN	__imp_?max_size@?$allocator@D@std@@QBEIXZ:PROC
; Function compile flags: /Odtp /ZI
; File c:\program files\microsoft visual studio 8\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ
_TEXT	SEGMENT
tv70 = -76						; size = 4
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1641 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1642 : 		size_type _Num = _Mybase::_Alval.max_size();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?max_size@?$allocator@D@std@@QBEIXZ
	mov	DWORD PTR __Num$[ebp], eax

; 1643 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size@2
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv70[ebp], eax
$LN4@max_size@2:
	mov	eax, DWORD PTR tv70[ebp]

; 1644 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$K2StringAllocator@D@@QAEPADI@Z	; K2StringAllocator<char>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$5
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z
_TEXT	SEGMENT
tv149 = -96						; size = 4
tv148 = -96						; size = 4
__Ptr$ = -28						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2000 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2001 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2002 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN6@Copy@2

; 2003 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax

; 2004 : 		else if (_Newres / 3 < _Myres / 2

	jmp	SHORT $LN5@Copy@2
$LN6@Copy@2:

; 2005 : 			&& _Myres <= max_size() - _Myres / 2)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	eax, ecx
	jae	SHORT $LN5@Copy@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+28]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], eax
	ja	SHORT $LN5@Copy@2

; 2006 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR __Newres$[ebp], ecx
$LN5@Copy@2:

; 2007 : 		_Elem *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 2008 : 
; 2009 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2010 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$K2StringAllocator@D@@QAEPADI@Z ; K2StringAllocator<char>::allocate
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN9@Copy@2
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$0:

; 2011 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2012 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax

; 2013 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2014 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$K2StringAllocator@D@@QAEPADI@Z ; K2StringAllocator<char>::allocate
	mov	DWORD PTR tv149[ebp], eax
	mov	ecx, DWORD PTR tv149[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN11@Copy@2
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$1:

; 2015 : 			_CATCH_ALL
; 2016 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Tidy

; 2017 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2018 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$2
	ret	0
$LN11@Copy@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$2:

; 2019 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$3
	ret	0
$LN9@Copy@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z$3:

; 2020 : 
; 2021 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy@2

; 2022 : 			_Traits_helper::copy_s<_Traits>(_Ptr, _Newres + 1, _Myptr(), _Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H
$LN1@Copy@2:

; 2023 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Tidy

; 2024 : 		_Bx._Ptr = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 2025 : 		_Myres = _Newres;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [eax+28], ecx

; 2026 : 		_Eos(_Oldlen);

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Eos
$LN8@Copy@2:

; 2027 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Copy
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2050 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2051 : 		_DEBUG_POINTER(_Ptr);

	push	2051					; 00000803H
	push	OFFSET ??_C@_1HM@LNGKEPMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH

; 2052 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@2
$LN2@Inside@2:

; 2053 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside@2

; 2054 : 		else

	jmp	SHORT $LN4@Inside@2
$LN3@Inside@2:

; 2055 : 			return (true);

	mov	al, 1
$LN4@Inside@2:

; 2056 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Inside
; Function compile flags: /Odtp /ZI
; File c:\code\hon\src\k2\k2_stl_allocator.h
_TEXT	ENDS
;	COMDAT ?allocate@?$K2StringAllocator@D@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$K2StringAllocator@D@@QAEPADI@Z PROC		; K2StringAllocator<char>::allocate, COMDAT
; _this$ = ecx

; 96   : 	pointer	allocate(size_type _Count)				{ return (pointer)MemManager.Allocate(_Count * sizeof(T), "ctx_STL_string"); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@PDHCCDLE@c?3?2code?2hon?2src?2k2?2c_memmanager?4@
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	2
	push	OFFSET ??_C@_0P@CDENJMCL@ctx_STL_string?$AA@
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?Allocate@CMemManager@@SAPAXIPBDW4MemoryType@@00F@Z ; CMemManager::Allocate
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$K2StringAllocator@D@@QAEPADI@Z ENDP		; K2StringAllocator<char>::allocate
; Function compile flags: /Odtp /ZI
; File c:\program files\microsoft visual studio 8\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT

; 1370 : 	{	// test iterator for non-singularity, const pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 1371 : 	if (_First == 0)

	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin@2

; 1372 : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
$LN2@Debug_poin@2:

; 1373 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
PUBLIC	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
PUBLIC	??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ; std::_Char_traits_cat<std::char_traits<char> >
; Function compile flags: /Odtp /ZI
; File c:\program files\microsoft visual studio 8\vc\include\iosfwd
;	COMDAT ??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z
_TEXT	SEGMENT
$T98953 = -65						; size = 1
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z PROC ; std::_Traits_helper::copy_s<std::char_traits<char> >, COMDAT

; 581  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 582  : 		return copy_s<_Traits>(_First1, _Size, _First2, _Count, _Char_traits_cat<_Traits>());

	call	??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ; std::_Char_traits_cat<std::char_traits<char> >
	mov	BYTE PTR $T98953[ebp], al
	mov	al, BYTE PTR $T98953[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First1$[ebp]
	push	ecx
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 20					; 00000014H

; 583  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ENDP ; std::_Traits_helper::copy_s<std::char_traits<char> >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ
_TEXT	SEGMENT
__Secure$ = -1						; size = 1
??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ PROC ; std::_Char_traits_cat<std::char_traits<char> >, COMDAT

; 568  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 569  : 		typename _Char_traits_category<_Traits>::_Secure_char_traits _Secure;
; 570  : 		return (_Secure);

	mov	al, BYTE PTR __Secure$[ebp]

; 571  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ENDP ; std::_Char_traits_cat<std::char_traits<char> >
_TEXT	ENDS
EXTRN	__imp_?_Copy_s@?$char_traits@D@std@@SAPADPADIPBDI@Z:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
___formal$ = 24						; size = 1
??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z PROC ; std::_Traits_helper::copy_s<std::char_traits<char> >, COMDAT

; 589  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 590  : 		return _Traits::_Copy_s(_First1, _Size, _First2, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Size$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Copy_s@?$char_traits@D@std@@SAPADPADIPBDI@Z
	add	esp, 16					; 00000010H

; 591  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ENDP ; std::_Traits_helper::copy_s<std::char_traits<char> >
_TEXT	ENDS
PUBLIC	??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::move_s<std::char_traits<char> >
; Function compile flags: /Odtp /ZI
;	COMDAT ??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z
_TEXT	SEGMENT
$T98960 = -65						; size = 1
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z PROC ; std::_Traits_helper::move_s<std::char_traits<char> >, COMDAT

; 608  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 609  : 		return move_s<_Traits>(_First1, _Size, _First2, _Count, _Char_traits_cat<_Traits>());

	call	??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ; std::_Char_traits_cat<std::char_traits<char> >
	mov	BYTE PTR $T98960[ebp], al
	mov	al, BYTE PTR $T98960[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First1$[ebp]
	push	ecx
	call	??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::move_s<std::char_traits<char> >
	add	esp, 20					; 00000014H

; 610  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ENDP ; std::_Traits_helper::move_s<std::char_traits<char> >
_TEXT	ENDS
EXTRN	__imp_?_Move_s@?$char_traits@D@std@@SAPADPADIPBDI@Z:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
___formal$ = 24						; size = 1
??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z PROC ; std::_Traits_helper::move_s<std::char_traits<char> >, COMDAT

; 616  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 617  : 		return _Traits::_Move_s(_First1, _Size, _First2, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Size$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Move_s@?$char_traits@D@std@@SAPADPADIPBDI@Z
	add	esp, 16					; 00000010H

; 618  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ENDP ; std::_Traits_helper::move_s<std::char_traits<char> >
_TEXT	ENDS
PUBLIC	??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@	; `string'
;	COMDAT ??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@
; File c:\code\hon\src\k2\k2_constants.h
CONST	SEGMENT
??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@ DB 0dH, 00H, 0aH, 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EWLINEBREAK@@YAXXZ
text$yc	SEGMENT
??__EWLINEBREAK@@YAXXZ PROC				; `dynamic initializer for 'WLINEBREAK'', COMDAT

; 214  : const wstring WLINEBREAK(L"\x0d\x0a");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@
	mov	ecx, OFFSET _WLINEBREAK
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FWLINEBREAK@@YAXXZ		; `dynamic atexit destructor for 'WLINEBREAK''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EWLINEBREAK@@YAXXZ ENDP				; `dynamic initializer for 'WLINEBREAK''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__ETLINEBREAK@@YAXXZ
text$yc	SEGMENT
??__ETLINEBREAK@@YAXXZ PROC				; `dynamic initializer for 'TLINEBREAK'', COMDAT

; 215  : const tstring TLINEBREAK(_T("\x0d\x0a"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@
	mov	ecx, OFFSET _TLINEBREAK
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FTLINEBREAK@@YAXXZ		; `dynamic atexit destructor for 'TLINEBREAK''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ETLINEBREAK@@YAXXZ ENDP				; `dynamic initializer for 'TLINEBREAK''
text$yc	ENDS
PUBLIC	??_C@_1O@JKADOALA@?$AA?5?$AA?$AM?$AA?6?$AA?$AN?$AA?7?$AA?$AL?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1O@JKADOALA@?$AA?5?$AA?$AM?$AA?6?$AA?$AN?$AA?7?$AA?$AL?$AA?$AA@
; File c:\code\hon\src\k2\stringutils.h
CONST	SEGMENT
??_C@_1O@JKADOALA@?$AA?5?$AA?$AM?$AA?6?$AA?$AN?$AA?7?$AA?$AL?$AA?$AA@ DB ' '
	DB	00H, 0cH, 00H, 0aH, 00H, 0dH, 00H, 09H, 00H, 0bH, 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EWHITESPACE@@YAXXZ
text$yc	SEGMENT
??__EWHITESPACE@@YAXXZ PROC				; `dynamic initializer for 'WHITESPACE'', COMDAT

; 21   : const tstring	WHITESPACE(_T(" \f\n\r\t\v"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_1O@JKADOALA@?$AA?5?$AA?$AM?$AA?6?$AA?$AN?$AA?7?$AA?$AL?$AA?$AA@
	mov	ecx, OFFSET _WHITESPACE
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FWHITESPACE@@YAXXZ		; `dynamic atexit destructor for 'WHITESPACE''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EWHITESPACE@@YAXXZ ENDP				; `dynamic initializer for 'WHITESPACE''
text$yc	ENDS
PUBLIC	??_C@_15BEJIIJPE@?$AA?2?$AA?$HM?$AA?$AA@	; `string'
;	COMDAT ??_C@_15BEJIIJPE@?$AA?2?$AA?$HM?$AA?$AA@
CONST	SEGMENT
??_C@_15BEJIIJPE@?$AA?2?$AA?$HM?$AA?$AA@ DB '\', 00H, '|', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__ESEARCH_PIPES@@YAXXZ
text$yc	SEGMENT
??__ESEARCH_PIPES@@YAXXZ PROC				; `dynamic initializer for 'SEARCH_PIPES'', COMDAT

; 22   : const tstring	SEARCH_PIPES(_T("\\|"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15BEJIIJPE@?$AA?2?$AA?$HM?$AA?$AA@
	mov	ecx, OFFSET _SEARCH_PIPES
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FSEARCH_PIPES@@YAXXZ		; `dynamic atexit destructor for 'SEARCH_PIPES''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ESEARCH_PIPES@@YAXXZ ENDP				; `dynamic initializer for 'SEARCH_PIPES''
text$yc	ENDS
PUBLIC	??_C@_15GHCJOBDD@?$AA?2?$AA?9?$AA?$AA@		; `string'
;	COMDAT ??_C@_15GHCJOBDD@?$AA?2?$AA?9?$AA?$AA@
CONST	SEGMENT
??_C@_15GHCJOBDD@?$AA?2?$AA?9?$AA?$AA@ DB '\', 00H, '-', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__ESEARCH_HYPHENS@@YAXXZ
text$yc	SEGMENT
??__ESEARCH_HYPHENS@@YAXXZ PROC				; `dynamic initializer for 'SEARCH_HYPHENS'', COMDAT

; 23   : const tstring	SEARCH_HYPHENS(_T("\\-"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_15GHCJOBDD@?$AA?2?$AA?9?$AA?$AA@
	mov	ecx, OFFSET _SEARCH_HYPHENS
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FSEARCH_HYPHENS@@YAXXZ	; `dynamic atexit destructor for 'SEARCH_HYPHENS''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ESEARCH_HYPHENS@@YAXXZ ENDP				; `dynamic initializer for 'SEARCH_HYPHENS''
text$yc	ENDS
PUBLIC	??_C@_1BE@POBIFFMI@?$AA?2?$AA?$CB?$AA?$CK?$AA?$EA?$AA?$CG?$AA?$CD?$AA?$FO?$AA$?$AA?$CF?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BE@POBIFFMI@?$AA?2?$AA?$CB?$AA?$CK?$AA?$EA?$AA?$CG?$AA?$CD?$AA?$FO?$AA$?$AA?$CF?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@POBIFFMI@?$AA?2?$AA?$CB?$AA?$CK?$AA?$EA?$AA?$CG?$AA?$CD?$AA?$FO?$AA$?$AA?$CF?$AA?$AA@ DB '\'
	DB	00H, '!', 00H, '*', 00H, '@', 00H, '&', 00H, '#', 00H, '^', 00H
	DB	'$', 00H, '%', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EREPLACE_PIPES@@YAXXZ
text$yc	SEGMENT
??__EREPLACE_PIPES@@YAXXZ PROC				; `dynamic initializer for 'REPLACE_PIPES'', COMDAT

; 24   : const tstring	REPLACE_PIPES(_T("\\!*@&#^$%"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_1BE@POBIFFMI@?$AA?2?$AA?$CB?$AA?$CK?$AA?$EA?$AA?$CG?$AA?$CD?$AA?$FO?$AA$?$AA?$CF?$AA?$AA@
	mov	ecx, OFFSET _REPLACE_PIPES
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FREPLACE_PIPES@@YAXXZ	; `dynamic atexit destructor for 'REPLACE_PIPES''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EREPLACE_PIPES@@YAXXZ ENDP				; `dynamic initializer for 'REPLACE_PIPES''
text$yc	ENDS
PUBLIC	??_C@_1BE@NKMIHEOD@?$AA?2?$AA?$CF?$AA$?$AA?$FO?$AA?$CD?$AA?$CG?$AA?$EA?$AA?$CK?$AA?$CB?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BE@NKMIHEOD@?$AA?2?$AA?$CF?$AA$?$AA?$FO?$AA?$CD?$AA?$CG?$AA?$EA?$AA?$CK?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@NKMIHEOD@?$AA?2?$AA?$CF?$AA$?$AA?$FO?$AA?$CD?$AA?$CG?$AA?$EA?$AA?$CK?$AA?$CB?$AA?$AA@ DB '\'
	DB	00H, '%', 00H, '$', 00H, '^', 00H, '#', 00H, '&', 00H, '@', 00H
	DB	'*', 00H, '!', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__EREPLACE_HYPHENS@@YAXXZ
text$yc	SEGMENT
??__EREPLACE_HYPHENS@@YAXXZ PROC			; `dynamic initializer for 'REPLACE_HYPHENS'', COMDAT

; 25   : const tstring	REPLACE_HYPHENS(_T("\\%$^#&@*!"));

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_1BE@NKMIHEOD@?$AA?2?$AA?$CF?$AA$?$AA?$FO?$AA?$CD?$AA?$CG?$AA?$EA?$AA?$CK?$AA?$CB?$AA?$AA@
	mov	ecx, OFFSET _REPLACE_HYPHENS
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	OFFSET ??__FREPLACE_HYPHENS@@YAXXZ	; `dynamic atexit destructor for 'REPLACE_HYPHENS''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EREPLACE_HYPHENS@@YAXXZ ENDP			; `dynamic initializer for 'REPLACE_HYPHENS''
text$yc	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::~basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
PUBLIC	??_C@_02NKOEGBLD@d?5?$AA@			; `string'
PUBLIC	??_C@_02NDPOJINH@h?5?$AA@			; `string'
PUBLIC	??_C@_02NFDFFKDM@m?5?$AA@			; `string'
PUBLIC	??_C@_02MDINNEEG@s?5?$AA@			; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3?$AA@			; `string'
;	COMDAT ??_C@_02NKOEGBLD@d?5?$AA@
; File c:\code\hon\src\k2\xtoa.h
CONST	SEGMENT
??_C@_02NKOEGBLD@d?5?$AA@ DB 'd ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NDPOJINH@h?5?$AA@
CONST	SEGMENT
??_C@_02NDPOJINH@h?5?$AA@ DB 'h ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NFDFFKDM@m?5?$AA@
CONST	SEGMENT
??_C@_02NFDFFKDM@m?5?$AA@ DB 'm ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MDINNEEG@s?5?$AA@
CONST	SEGMENT
??_C@_02MDINNEEG@s?5?$AA@ DB 's ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3?$AA@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__ETIME_STRINGS@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__ETIME_STRINGS@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??__ETIME_STRINGS@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??__ETIME_STRINGS@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??__ETIME_STRINGS@@YAXXZ$3
__ehfuncinfo$??__ETIME_STRINGS@@YAXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??__ETIME_STRINGS@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??__ETIME_STRINGS@@YAXXZ
text$yc	SEGMENT
__$EHRec$ = -12						; size = 12
??__ETIME_STRINGS@@YAXXZ PROC				; `dynamic initializer for 'TIME_STRINGS'', COMDAT

; 57   : const string TIME_STRINGS[] = { ":", "s ", "m ", "h ", "d " };

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__ETIME_STRINGS@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	mov	ecx, OFFSET _TIME_STRINGS
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_02MDINNEEG@s?5?$AA@
	mov	ecx, OFFSET _TIME_STRINGS+32
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??_C@_02NFDFFKDM@m?5?$AA@
	mov	ecx, OFFSET _TIME_STRINGS+64
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_02NDPOJINH@h?5?$AA@
	mov	ecx, OFFSET _TIME_STRINGS+96
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET ??_C@_02NKOEGBLD@d?5?$AA@
	mov	ecx, OFFSET _TIME_STRINGS+128
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??__FTIME_STRINGS@@YAXXZ		; `dynamic atexit destructor for 'TIME_STRINGS''
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__ETIME_STRINGS@@YAXXZ$0:
	mov	ecx, OFFSET _TIME_STRINGS
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::~basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
__unwindfunclet$??__ETIME_STRINGS@@YAXXZ$1:
	mov	ecx, OFFSET _TIME_STRINGS+32
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::~basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
__unwindfunclet$??__ETIME_STRINGS@@YAXXZ$2:
	mov	ecx, OFFSET _TIME_STRINGS+64
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::~basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
__unwindfunclet$??__ETIME_STRINGS@@YAXXZ$3:
	mov	ecx, OFFSET _TIME_STRINGS+96
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::~basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
__ehhandler$??__ETIME_STRINGS@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__ETIME_STRINGS@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__ETIME_STRINGS@@YAXXZ ENDP				; `dynamic initializer for 'TIME_STRINGS''
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 8\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::~basic_string<char,std::char_traits<char>,K2StringAllocator<char> >, COMDAT
; _this$ = ecx

; 904  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 905  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::_Tidy

; 906  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$K2StringAllocator@D@@@std@@QAE@XZ
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::~basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
PUBLIC	??_C@_15HNGKLMCO@?$AAd?$AA?5?$AA?$AA@		; `string'
PUBLIC	??_C@_15KKIHMFF@?$AAh?$AA?5?$AA?$AA@		; `string'
PUBLIC	??_C@_15FKGFONOG@?$AAm?$AA?5?$AA?$AA@		; `string'
PUBLIC	??_C@_15GDLJIOAN@?$AAs?$AA?5?$AA?$AA@		; `string'
PUBLIC	??_C@_13EBCNDICG@?$AA?3?$AA?$AA@		; `string'
;	COMDAT ??_C@_15HNGKLMCO@?$AAd?$AA?5?$AA?$AA@
; File c:\code\hon\src\k2\xtoa.h
CONST	SEGMENT
??_C@_15HNGKLMCO@?$AAd?$AA?5?$AA?$AA@ DB 'd', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15KKIHMFF@?$AAh?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_15KKIHMFF@?$AAh?$AA?5?$AA?$AA@ DB 'h', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15FKGFONOG@?$AAm?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_15FKGFONOG@?$AAm?$AA?5?$AA?$AA@ DB 'm', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15GDLJIOAN@?$AAs?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_15GDLJIOAN@?$AAs?$AA?5?$AA?$AA@ DB 's', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_13EBCNDICG@?$AA?3?$AA?$AA@
CONST	SEGMENT
??_C@_13EBCNDICG@?$AA?3?$AA?$AA@ DB ':', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__ETIME_STRINGW@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__ETIME_STRINGW@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??__ETIME_STRINGW@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??__ETIME_STRINGW@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??__ETIME_STRINGW@@YAXXZ$3
__ehfuncinfo$??__ETIME_STRINGW@@YAXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??__ETIME_STRINGW@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??__ETIME_STRINGW@@YAXXZ
text$yc	SEGMENT
__$EHRec$ = -12						; size = 12
??__ETIME_STRINGW@@YAXXZ PROC				; `dynamic initializer for 'TIME_STRINGW'', COMDAT

; 58   : const wstring TIME_STRINGW[] = { L":", L"s ", L"m ", L"h ", L"d " };

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__ETIME_STRINGW@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??_C@_13EBCNDICG@?$AA?3?$AA?$AA@
	mov	ecx, OFFSET _TIME_STRINGW
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_15GDLJIOAN@?$AAs?$AA?5?$AA?$AA@
	mov	ecx, OFFSET _TIME_STRINGW+32
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??_C@_15FKGFONOG@?$AAm?$AA?5?$AA?$AA@
	mov	ecx, OFFSET _TIME_STRINGW+64
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_15KKIHMFF@?$AAh?$AA?5?$AA?$AA@
	mov	ecx, OFFSET _TIME_STRINGW+96
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET ??_C@_15HNGKLMCO@?$AAd?$AA?5?$AA?$AA@
	mov	ecx, OFFSET _TIME_STRINGW+128
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??__FTIME_STRINGW@@YAXXZ		; `dynamic atexit destructor for 'TIME_STRINGW''
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__ETIME_STRINGW@@YAXXZ$0:
	mov	ecx, OFFSET _TIME_STRINGW
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
__unwindfunclet$??__ETIME_STRINGW@@YAXXZ$1:
	mov	ecx, OFFSET _TIME_STRINGW+32
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
__unwindfunclet$??__ETIME_STRINGW@@YAXXZ$2:
	mov	ecx, OFFSET _TIME_STRINGW+64
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
__unwindfunclet$??__ETIME_STRINGW@@YAXXZ$3:
	mov	ecx, OFFSET _TIME_STRINGW+96
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
__ehhandler$??__ETIME_STRINGW@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__ETIME_STRINGW@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__ETIME_STRINGW@@YAXXZ ENDP				; `dynamic initializer for 'TIME_STRINGW''
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 8\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >, COMDAT
; _this$ = ecx

; 904  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 905  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@IAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::_Tidy

; 906  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@_WV?$K2StringAllocator@_W@@@std@@QAE@XZ
__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FsBlue@@YAXXZ
text$yd	SEGMENT
??__FsBlue@@YAXXZ PROC					; `dynamic atexit destructor for 'sBlue'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sBlue
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsBlue@@YAXXZ ENDP					; `dynamic atexit destructor for 'sBlue''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsCyan@@YAXXZ
text$yd	SEGMENT
??__FsCyan@@YAXXZ PROC					; `dynamic atexit destructor for 'sCyan'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sCyan
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsCyan@@YAXXZ ENDP					; `dynamic atexit destructor for 'sCyan''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPurple@@YAXXZ
text$yd	SEGMENT
??__FsPurple@@YAXXZ PROC				; `dynamic atexit destructor for 'sPurple'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPurple
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPurple@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPurple''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsOrange@@YAXXZ
text$yd	SEGMENT
??__FsOrange@@YAXXZ PROC				; `dynamic atexit destructor for 'sOrange'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sOrange
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsOrange@@YAXXZ ENDP				; `dynamic atexit destructor for 'sOrange''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsGray@@YAXXZ
text$yd	SEGMENT
??__FsGray@@YAXXZ PROC					; `dynamic atexit destructor for 'sGray'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sGray
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsGray@@YAXXZ ENDP					; `dynamic atexit destructor for 'sGray''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsTeal@@YAXXZ
text$yd	SEGMENT
??__FsTeal@@YAXXZ PROC					; `dynamic atexit destructor for 'sTeal'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sTeal
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsTeal@@YAXXZ ENDP					; `dynamic atexit destructor for 'sTeal''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsGreen@@YAXXZ
text$yd	SEGMENT
??__FsGreen@@YAXXZ PROC					; `dynamic atexit destructor for 'sGreen'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sGreen
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsGreen@@YAXXZ ENDP					; `dynamic atexit destructor for 'sGreen''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsMagenta@@YAXXZ
text$yd	SEGMENT
??__FsMagenta@@YAXXZ PROC				; `dynamic atexit destructor for 'sMagenta'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sMagenta
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsMagenta@@YAXXZ ENDP				; `dynamic atexit destructor for 'sMagenta''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsBrown@@YAXXZ
text$yd	SEGMENT
??__FsBrown@@YAXXZ PROC					; `dynamic atexit destructor for 'sBrown'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sBrown
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsBrown@@YAXXZ ENDP					; `dynamic atexit destructor for 'sBrown''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsYellow@@YAXXZ
text$yd	SEGMENT
??__FsYellow@@YAXXZ PROC				; `dynamic atexit destructor for 'sYellow'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sYellow
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsYellow@@YAXXZ ENDP				; `dynamic atexit destructor for 'sYellow''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsRed@@YAXXZ
text$yd	SEGMENT
??__FsRed@@YAXXZ PROC					; `dynamic atexit destructor for 'sRed'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sRed
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsRed@@YAXXZ ENDP					; `dynamic atexit destructor for 'sRed''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsWhite@@YAXXZ
text$yd	SEGMENT
??__FsWhite@@YAXXZ PROC					; `dynamic atexit destructor for 'sWhite'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sWhite
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsWhite@@YAXXZ ENDP					; `dynamic atexit destructor for 'sWhite''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsBlack@@YAXXZ
text$yd	SEGMENT
??__FsBlack@@YAXXZ PROC					; `dynamic atexit destructor for 'sBlack'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sBlack
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsBlack@@YAXXZ ENDP					; `dynamic atexit destructor for 'sBlack''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsNoColor@@YAXXZ
text$yd	SEGMENT
??__FsNoColor@@YAXXZ PROC				; `dynamic atexit destructor for 'sNoColor'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sNoColor
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsNoColor@@YAXXZ ENDP				; `dynamic atexit destructor for 'sNoColor''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCBlue@@YAXXZ
text$yd	SEGMENT
??__FsPCBlue@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCBlue'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCBlue
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCBlue@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCBlue''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCTeal@@YAXXZ
text$yd	SEGMENT
??__FsPCTeal@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCTeal'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCTeal
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCTeal@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCTeal''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCPurple@@YAXXZ
text$yd	SEGMENT
??__FsPCPurple@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCPurple'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCPurple
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCPurple@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCPurple''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCYellow@@YAXXZ
text$yd	SEGMENT
??__FsPCYellow@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCYellow'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCYellow
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCYellow@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCYellow''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCOrange@@YAXXZ
text$yd	SEGMENT
??__FsPCOrange@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCOrange'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCOrange
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCOrange@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCOrange''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCPink@@YAXXZ
text$yd	SEGMENT
??__FsPCPink@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCPink'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCPink
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCPink@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCPink''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCGray@@YAXXZ
text$yd	SEGMENT
??__FsPCGray@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCGray'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCGray
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCGray@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCGray''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCLightBlue@@YAXXZ
text$yd	SEGMENT
??__FsPCLightBlue@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCLightBlue'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCLightBlue
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCLightBlue@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCLightBlue''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCDarkGreen@@YAXXZ
text$yd	SEGMENT
??__FsPCDarkGreen@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCDarkGreen'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCDarkGreen
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCDarkGreen@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCDarkGreen''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FsPCBrown@@YAXXZ
text$yd	SEGMENT
??__FsPCBrown@@YAXXZ PROC				; `dynamic atexit destructor for 'sPCBrown'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _sPCBrown
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPCBrown@@YAXXZ ENDP				; `dynamic atexit destructor for 'sPCBrown''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FLINEBREAK@@YAXXZ
text$yd	SEGMENT
??__FLINEBREAK@@YAXXZ PROC				; `dynamic atexit destructor for 'LINEBREAK'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _LINEBREAK
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::~basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FLINEBREAK@@YAXXZ ENDP				; `dynamic atexit destructor for 'LINEBREAK''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FWLINEBREAK@@YAXXZ
text$yd	SEGMENT
??__FWLINEBREAK@@YAXXZ PROC				; `dynamic atexit destructor for 'WLINEBREAK'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _WLINEBREAK
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FWLINEBREAK@@YAXXZ ENDP				; `dynamic atexit destructor for 'WLINEBREAK''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FTLINEBREAK@@YAXXZ
text$yd	SEGMENT
??__FTLINEBREAK@@YAXXZ PROC				; `dynamic atexit destructor for 'TLINEBREAK'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _TLINEBREAK
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FTLINEBREAK@@YAXXZ ENDP				; `dynamic atexit destructor for 'TLINEBREAK''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FWHITESPACE@@YAXXZ
text$yd	SEGMENT
??__FWHITESPACE@@YAXXZ PROC				; `dynamic atexit destructor for 'WHITESPACE'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _WHITESPACE
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FWHITESPACE@@YAXXZ ENDP				; `dynamic atexit destructor for 'WHITESPACE''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FSEARCH_PIPES@@YAXXZ
text$yd	SEGMENT
??__FSEARCH_PIPES@@YAXXZ PROC				; `dynamic atexit destructor for 'SEARCH_PIPES'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _SEARCH_PIPES
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FSEARCH_PIPES@@YAXXZ ENDP				; `dynamic atexit destructor for 'SEARCH_PIPES''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FSEARCH_HYPHENS@@YAXXZ
text$yd	SEGMENT
??__FSEARCH_HYPHENS@@YAXXZ PROC				; `dynamic atexit destructor for 'SEARCH_HYPHENS'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _SEARCH_HYPHENS
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FSEARCH_HYPHENS@@YAXXZ ENDP				; `dynamic atexit destructor for 'SEARCH_HYPHENS''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FREPLACE_PIPES@@YAXXZ
text$yd	SEGMENT
??__FREPLACE_PIPES@@YAXXZ PROC				; `dynamic atexit destructor for 'REPLACE_PIPES'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _REPLACE_PIPES
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FREPLACE_PIPES@@YAXXZ ENDP				; `dynamic atexit destructor for 'REPLACE_PIPES''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FREPLACE_HYPHENS@@YAXXZ
text$yd	SEGMENT
??__FREPLACE_HYPHENS@@YAXXZ PROC			; `dynamic atexit destructor for 'REPLACE_HYPHENS'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET _REPLACE_HYPHENS
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FREPLACE_HYPHENS@@YAXXZ ENDP			; `dynamic atexit destructor for 'REPLACE_HYPHENS''
text$yd	ENDS
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FTIME_STRINGS@@YAXXZ
text$yd	SEGMENT
??__FTIME_STRINGS@@YAXXZ PROC				; `dynamic atexit destructor for 'TIME_STRINGS'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$K2StringAllocator@D@@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,K2StringAllocator<char> >::~basic_string<char,std::char_traits<char>,K2StringAllocator<char> >
	push	5
	push	32					; 00000020H
	push	OFFSET _TIME_STRINGS
	call	??_M@YGXPAXIHP6EX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FTIME_STRINGS@@YAXXZ ENDP				; `dynamic atexit destructor for 'TIME_STRINGS''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__FTIME_STRINGW@@YAXXZ
text$yd	SEGMENT
??__FTIME_STRINGW@@YAXXZ PROC				; `dynamic atexit destructor for 'TIME_STRINGW'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??1?$basic_string@_WU?$char_traits@_W@std@@V?$K2StringAllocator@_W@@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,K2StringAllocator<wchar_t> >
	push	5
	push	32					; 00000020H
	push	OFFSET _TIME_STRINGW
	call	??_M@YGXPAXIHP6EX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FTIME_STRINGW@@YAXXZ ENDP				; `dynamic atexit destructor for 'TIME_STRINGW''
text$yd	ENDS
_BSS	SEGMENT
_sPCPink DB	020H DUP (?)
_SEARCH_HYPHENS DB 020H DUP (?)
_TLINEBREAK DB	020H DUP (?)
_REPLACE_HYPHENS DB 020H DUP (?)
_LINEBREAK DB	020H DUP (?)
_sPCTeal DB	020H DUP (?)
_sOrange DB	020H DUP (?)
_sBlue	DB	020H DUP (?)
_sNoColor DB	020H DUP (?)
_sGreen	DB	020H DUP (?)
_g_v4Colors DB	01c0H DUP (?)
_SEARCH_PIPES DB 020H DUP (?)
_sPCDarkGreen DB 020H DUP (?)
_sPCBlue DB	020H DUP (?)
_sMagenta DB	020H DUP (?)
_sPCYellow DB	020H DUP (?)
_sPCLightBlue DB 020H DUP (?)
_TIME_STRINGW DB 0a0H DUP (?)
_sPCGray DB	020H DUP (?)
_sPurple DB	020H DUP (?)
_sBrown	DB	020H DUP (?)
_sYellow DB	020H DUP (?)
_sGray	DB	020H DUP (?)
_TIME_STRINGS DB 0a0H DUP (?)
_sPCPurple DB	020H DUP (?)
_WLINEBREAK DB	020H DUP (?)
_sRed	DB	020H DUP (?)
_sPCOrange DB	020H DUP (?)
_sPCBrown DB	020H DUP (?)
_REPLACE_PIPES DB 020H DUP (?)
_sWhite	DB	020H DUP (?)
_sCyan	DB	020H DUP (?)
_WHITESPACE DB	020H DUP (?)
_sBlack	DB	020H DUP (?)
_sTeal	DB	020H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_sBlue$initializer$ DD FLAT:??__EsBlue@@YAXXZ
_sCyan$initializer$ DD FLAT:??__EsCyan@@YAXXZ
_sPurple$initializer$ DD FLAT:??__EsPurple@@YAXXZ
_sOrange$initializer$ DD FLAT:??__EsOrange@@YAXXZ
_sGray$initializer$ DD FLAT:??__EsGray@@YAXXZ
_sTeal$initializer$ DD FLAT:??__EsTeal@@YAXXZ
_sGreen$initializer$ DD FLAT:??__EsGreen@@YAXXZ
_sMagenta$initializer$ DD FLAT:??__EsMagenta@@YAXXZ
_sBrown$initializer$ DD FLAT:??__EsBrown@@YAXXZ
_sYellow$initializer$ DD FLAT:??__EsYellow@@YAXXZ
_sRed$initializer$ DD FLAT:??__EsRed@@YAXXZ
_sWhite$initializer$ DD FLAT:??__EsWhite@@YAXXZ
_sBlack$initializer$ DD FLAT:??__EsBlack@@YAXXZ
_sNoColor$initializer$ DD FLAT:??__EsNoColor@@YAXXZ
_sPCBlue$initializer$ DD FLAT:??__EsPCBlue@@YAXXZ
_sPCTeal$initializer$ DD FLAT:??__EsPCTeal@@YAXXZ
_sPCPurple$initializer$ DD FLAT:??__EsPCPurple@@YAXXZ
_sPCYellow$initializer$ DD FLAT:??__EsPCYellow@@YAXXZ
_sPCOrange$initializer$ DD FLAT:??__EsPCOrange@@YAXXZ
_sPCPink$initializer$ DD FLAT:??__EsPCPink@@YAXXZ
_sPCGray$initializer$ DD FLAT:??__EsPCGray@@YAXXZ
_sPCLightBlue$initializer$ DD FLAT:??__EsPCLightBlue@@YAXXZ
_sPCDarkGreen$initializer$ DD FLAT:??__EsPCDarkGreen@@YAXXZ
_sPCBrown$initializer$ DD FLAT:??__EsPCBrown@@YAXXZ
_g_v4Colors$initializer$ DD FLAT:??__Eg_v4Colors@@YAXXZ
_LINEBREAK$initializer$ DD FLAT:??__ELINEBREAK@@YAXXZ
_WLINEBREAK$initializer$ DD FLAT:??__EWLINEBREAK@@YAXXZ
_TLINEBREAK$initializer$ DD FLAT:??__ETLINEBREAK@@YAXXZ
_WHITESPACE$initializer$ DD FLAT:??__EWHITESPACE@@YAXXZ
_SEARCH_PIPES$initializer$ DD FLAT:??__ESEARCH_PIPES@@YAXXZ
_SEARCH_HYPHENS$initializer$ DD FLAT:??__ESEARCH_HYPHENS@@YAXXZ
_REPLACE_PIPES$initializer$ DD FLAT:??__EREPLACE_PIPES@@YAXXZ
_REPLACE_HYPHENS$initializer$ DD FLAT:??__EREPLACE_HYPHENS@@YAXXZ
_TIME_STRINGS$initializer$ DD FLAT:??__ETIME_STRINGS@@YAXXZ
_TIME_STRINGW$initializer$ DD FLAT:??__ETIME_STRINGW@@YAXXZ
CRT$XCU	ENDS
END

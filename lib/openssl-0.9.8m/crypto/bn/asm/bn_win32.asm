	; Don't even think of reading this code
	; It was automatically generated by bn-586.pl
	; Which is a perl program used to generate the x86 assember for
	; any of ELF, a.out, COFF, Win32, ...
	; eric <eay@cryptsoft.com>
	; 
	TITLE	bn-586.asm
        .686
.XMM
IF @Version LT 800
XMMWORD STRUCT 16
	DQ  2 dup (?)
XMMWORD ENDS
ENDIF

.model	FLAT
_TEXT$	SEGMENT PAGE 'CODE'

EXTRN	_OPENSSL_ia32cap_P:DWORD
PUBLIC	_bn_mul_add_words
EXTRN	_OPENSSL_ia32cap_P:DWORD
_bn_mul_add_words PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	xor	esi,		esi
	mov	edi,		DWORD PTR 20[esp]
	mov	ecx,		DWORD PTR 28[esp]
	mov	ebx,		DWORD PTR 24[esp]
	and	ecx,		4294967288
	mov	ebp,		DWORD PTR 32[esp]
	push	ecx
	jz	$L000maw_finish
	lea	eax,		DWORD PTR _OPENSSL_ia32cap_P
	bt	DWORD PTR [eax],26
	jnc	$L001maw_loop
	movd	mm0,		ebp
	pxor	mm1,		mm1
$L002maw_sse2_loop:
	movd	mm3,		DWORD PTR [edi]
	paddq	mm1,		mm3
	movd	mm2,		DWORD PTR [ebx]
	pmuludq	mm2,		mm0
	movd	mm4,		DWORD PTR 4[ebx]
	pmuludq	mm4,		mm0
	movd	mm6,		DWORD PTR 8[ebx]
	pmuludq	mm6,		mm0
	movd	mm7,		DWORD PTR 12[ebx]
	pmuludq	mm7,		mm0
	paddq	mm1,		mm2
	movd	mm3,		DWORD PTR 4[edi]
	paddq	mm3,		mm4
	movd	mm5,		DWORD PTR 8[edi]
	paddq	mm5,		mm6
	movd	mm4,		DWORD PTR 12[edi]
	paddq	mm7,		mm4
	movd	DWORD PTR [edi],mm1
	movd	mm2,		DWORD PTR 16[ebx]
	pmuludq	mm2,		mm0
	psrlq	mm1,		32
	movd	mm4,		DWORD PTR 20[ebx]
	pmuludq	mm4,		mm0
	paddq	mm1,		mm3
	movd	mm6,		DWORD PTR 24[ebx]
	pmuludq	mm6,		mm0
	movd	DWORD PTR 4[edi],mm1
	psrlq	mm1,		32
	movd	mm3,		DWORD PTR 28[ebx]
	add	ebx,		32
	pmuludq	mm3,		mm0
	paddq	mm1,		mm5
	movd	mm5,		DWORD PTR 16[edi]
	paddq	mm2,		mm5
	movd	DWORD PTR 8[edi],mm1
	psrlq	mm1,		32
	paddq	mm1,		mm7
	movd	mm5,		DWORD PTR 20[edi]
	paddq	mm4,		mm5
	movd	DWORD PTR 12[edi],mm1
	psrlq	mm1,		32
	paddq	mm1,		mm2
	movd	mm5,		DWORD PTR 24[edi]
	paddq	mm6,		mm5
	movd	DWORD PTR 16[edi],mm1
	psrlq	mm1,		32
	paddq	mm1,		mm4
	movd	mm5,		DWORD PTR 28[edi]
	paddq	mm3,		mm5
	movd	DWORD PTR 20[edi],mm1
	psrlq	mm1,		32
	paddq	mm1,		mm6
	movd	DWORD PTR 24[edi],mm1
	psrlq	mm1,		32
	paddq	mm1,		mm3
	movd	DWORD PTR 28[edi],mm1
	add	edi,		32
	psrlq	mm1,		32
	sub	ecx,		8
	jnz	$L002maw_sse2_loop
	movd	esi,		mm1
	emms
	jmp	$L000maw_finish
$L001maw_loop:
	mov	DWORD PTR [esp],ecx
	; Round 0
	mov	eax,		DWORD PTR [ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR [edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR [edi],eax
	mov	esi,		edx
	; Round 4
	mov	eax,		DWORD PTR 4[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 4[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 4[edi],eax
	mov	esi,		edx
	; Round 8
	mov	eax,		DWORD PTR 8[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 8[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 8[edi],eax
	mov	esi,		edx
	; Round 12
	mov	eax,		DWORD PTR 12[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 12[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 12[edi],eax
	mov	esi,		edx
	; Round 16
	mov	eax,		DWORD PTR 16[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 16[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 16[edi],eax
	mov	esi,		edx
	; Round 20
	mov	eax,		DWORD PTR 20[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 20[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 20[edi],eax
	mov	esi,		edx
	; Round 24
	mov	eax,		DWORD PTR 24[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 24[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 24[edi],eax
	mov	esi,		edx
	; Round 28
	mov	eax,		DWORD PTR 28[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 28[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 28[edi],eax
	mov	esi,		edx
	; 
	mov	ecx,		DWORD PTR [esp]
	add	ebx,		32
	add	edi,		32
	sub	ecx,		8
	jnz	$L001maw_loop
$L000maw_finish:
	mov	ecx,		DWORD PTR 32[esp]
	and	ecx,		7
	jnz	$L003maw_finish2
	jmp	$L004maw_end
$L003maw_finish2:
	; Tail Round 0
	mov	eax,		DWORD PTR [ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR [edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD PTR [edi],eax
	mov	esi,		edx
	jz	$L004maw_end
	; Tail Round 1
	mov	eax,		DWORD PTR 4[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 4[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD PTR 4[edi],eax
	mov	esi,		edx
	jz	$L004maw_end
	; Tail Round 2
	mov	eax,		DWORD PTR 8[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 8[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD PTR 8[edi],eax
	mov	esi,		edx
	jz	$L004maw_end
	; Tail Round 3
	mov	eax,		DWORD PTR 12[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 12[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD PTR 12[edi],eax
	mov	esi,		edx
	jz	$L004maw_end
	; Tail Round 4
	mov	eax,		DWORD PTR 16[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 16[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD PTR 16[edi],eax
	mov	esi,		edx
	jz	$L004maw_end
	; Tail Round 5
	mov	eax,		DWORD PTR 20[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 20[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD PTR 20[edi],eax
	mov	esi,		edx
	jz	$L004maw_end
	; Tail Round 6
	mov	eax,		DWORD PTR 24[ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD PTR 24[edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 24[edi],eax
	mov	esi,		edx
$L004maw_end:
	mov	eax,		esi
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_bn_mul_add_words ENDP
PUBLIC	_bn_mul_words

_bn_mul_words PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	xor	esi,		esi
	mov	edi,		DWORD PTR 20[esp]
	mov	ebx,		DWORD PTR 24[esp]
	mov	ebp,		DWORD PTR 28[esp]
	mov	ecx,		DWORD PTR 32[esp]
	and	ebp,		4294967288
	jz	$L005mw_finish
$L006mw_loop:
	; Round 0
	mov	eax,		DWORD PTR [ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR [edi],eax
	mov	esi,		edx
	; Round 4
	mov	eax,		DWORD PTR 4[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 4[edi],eax
	mov	esi,		edx
	; Round 8
	mov	eax,		DWORD PTR 8[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 8[edi],eax
	mov	esi,		edx
	; Round 12
	mov	eax,		DWORD PTR 12[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 12[edi],eax
	mov	esi,		edx
	; Round 16
	mov	eax,		DWORD PTR 16[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 16[edi],eax
	mov	esi,		edx
	; Round 20
	mov	eax,		DWORD PTR 20[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 20[edi],eax
	mov	esi,		edx
	; Round 24
	mov	eax,		DWORD PTR 24[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 24[edi],eax
	mov	esi,		edx
	; Round 28
	mov	eax,		DWORD PTR 28[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 28[edi],eax
	mov	esi,		edx
	; 
	add	ebx,		32
	add	edi,		32
	sub	ebp,		8
	jz	$L005mw_finish
	jmp	$L006mw_loop
$L005mw_finish:
	mov	ebp,		DWORD PTR 28[esp]
	and	ebp,		7
	jnz	$L007mw_finish2
	jmp	$L008mw_end
$L007mw_finish2:
	; Tail Round 0
	mov	eax,		DWORD PTR [ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR [edi],eax
	mov	esi,		edx
	dec	ebp
	jz	$L008mw_end
	; Tail Round 1
	mov	eax,		DWORD PTR 4[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 4[edi],eax
	mov	esi,		edx
	dec	ebp
	jz	$L008mw_end
	; Tail Round 2
	mov	eax,		DWORD PTR 8[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 8[edi],eax
	mov	esi,		edx
	dec	ebp
	jz	$L008mw_end
	; Tail Round 3
	mov	eax,		DWORD PTR 12[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 12[edi],eax
	mov	esi,		edx
	dec	ebp
	jz	$L008mw_end
	; Tail Round 4
	mov	eax,		DWORD PTR 16[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 16[edi],eax
	mov	esi,		edx
	dec	ebp
	jz	$L008mw_end
	; Tail Round 5
	mov	eax,		DWORD PTR 20[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 20[edi],eax
	mov	esi,		edx
	dec	ebp
	jz	$L008mw_end
	; Tail Round 6
	mov	eax,		DWORD PTR 24[ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD PTR 24[edi],eax
	mov	esi,		edx
$L008mw_end:
	mov	eax,		esi
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_bn_mul_words ENDP
PUBLIC	_bn_sqr_words

_bn_sqr_words PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	mov	esi,		DWORD PTR 20[esp]
	mov	edi,		DWORD PTR 24[esp]
	mov	ebx,		DWORD PTR 28[esp]
	and	ebx,		4294967288
	jz	$L009sw_finish
$L010sw_loop:
	; Round 0
	mov	eax,		DWORD PTR [edi]
	mul	eax
	mov	DWORD PTR [esi],eax
	mov	DWORD PTR 4[esi],edx
	; Round 4
	mov	eax,		DWORD PTR 4[edi]
	mul	eax
	mov	DWORD PTR 8[esi],eax
	mov	DWORD PTR 12[esi],edx
	; Round 8
	mov	eax,		DWORD PTR 8[edi]
	mul	eax
	mov	DWORD PTR 16[esi],eax
	mov	DWORD PTR 20[esi],edx
	; Round 12
	mov	eax,		DWORD PTR 12[edi]
	mul	eax
	mov	DWORD PTR 24[esi],eax
	mov	DWORD PTR 28[esi],edx
	; Round 16
	mov	eax,		DWORD PTR 16[edi]
	mul	eax
	mov	DWORD PTR 32[esi],eax
	mov	DWORD PTR 36[esi],edx
	; Round 20
	mov	eax,		DWORD PTR 20[edi]
	mul	eax
	mov	DWORD PTR 40[esi],eax
	mov	DWORD PTR 44[esi],edx
	; Round 24
	mov	eax,		DWORD PTR 24[edi]
	mul	eax
	mov	DWORD PTR 48[esi],eax
	mov	DWORD PTR 52[esi],edx
	; Round 28
	mov	eax,		DWORD PTR 28[edi]
	mul	eax
	mov	DWORD PTR 56[esi],eax
	mov	DWORD PTR 60[esi],edx
	; 
	add	edi,		32
	add	esi,		64
	sub	ebx,		8
	jnz	$L010sw_loop
$L009sw_finish:
	mov	ebx,		DWORD PTR 28[esp]
	and	ebx,		7
	jz	$L011sw_end
	; Tail Round 0
	mov	eax,		DWORD PTR [edi]
	mul	eax
	mov	DWORD PTR [esi],eax
	dec	ebx
	mov	DWORD PTR 4[esi],edx
	jz	$L011sw_end
	; Tail Round 1
	mov	eax,		DWORD PTR 4[edi]
	mul	eax
	mov	DWORD PTR 8[esi],eax
	dec	ebx
	mov	DWORD PTR 12[esi],edx
	jz	$L011sw_end
	; Tail Round 2
	mov	eax,		DWORD PTR 8[edi]
	mul	eax
	mov	DWORD PTR 16[esi],eax
	dec	ebx
	mov	DWORD PTR 20[esi],edx
	jz	$L011sw_end
	; Tail Round 3
	mov	eax,		DWORD PTR 12[edi]
	mul	eax
	mov	DWORD PTR 24[esi],eax
	dec	ebx
	mov	DWORD PTR 28[esi],edx
	jz	$L011sw_end
	; Tail Round 4
	mov	eax,		DWORD PTR 16[edi]
	mul	eax
	mov	DWORD PTR 32[esi],eax
	dec	ebx
	mov	DWORD PTR 36[esi],edx
	jz	$L011sw_end
	; Tail Round 5
	mov	eax,		DWORD PTR 20[edi]
	mul	eax
	mov	DWORD PTR 40[esi],eax
	dec	ebx
	mov	DWORD PTR 44[esi],edx
	jz	$L011sw_end
	; Tail Round 6
	mov	eax,		DWORD PTR 24[edi]
	mul	eax
	mov	DWORD PTR 48[esi],eax
	mov	DWORD PTR 52[esi],edx
$L011sw_end:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_bn_sqr_words ENDP
PUBLIC	_bn_div_words

_bn_div_words PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	mov	edx,		DWORD PTR 20[esp]
	mov	eax,		DWORD PTR 24[esp]
	mov	ebx,		DWORD PTR 28[esp]
	div	ebx
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_bn_div_words ENDP
PUBLIC	_bn_add_words

_bn_add_words PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	mov	ebx,		DWORD PTR 20[esp]
	mov	esi,		DWORD PTR 24[esp]
	mov	edi,		DWORD PTR 28[esp]
	mov	ebp,		DWORD PTR 32[esp]
	xor	eax,		eax
	and	ebp,		4294967288
	jz	$L012aw_finish
$L013aw_loop:
	; Round 0
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	; Round 1
	mov	ecx,		DWORD PTR 4[esi]
	mov	edx,		DWORD PTR 4[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 4[ebx],ecx
	; Round 2
	mov	ecx,		DWORD PTR 8[esi]
	mov	edx,		DWORD PTR 8[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 8[ebx],ecx
	; Round 3
	mov	ecx,		DWORD PTR 12[esi]
	mov	edx,		DWORD PTR 12[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 12[ebx],ecx
	; Round 4
	mov	ecx,		DWORD PTR 16[esi]
	mov	edx,		DWORD PTR 16[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 16[ebx],ecx
	; Round 5
	mov	ecx,		DWORD PTR 20[esi]
	mov	edx,		DWORD PTR 20[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 20[ebx],ecx
	; Round 6
	mov	ecx,		DWORD PTR 24[esi]
	mov	edx,		DWORD PTR 24[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 24[ebx],ecx
	; Round 7
	mov	ecx,		DWORD PTR 28[esi]
	mov	edx,		DWORD PTR 28[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 28[ebx],ecx
	; 
	add	esi,		32
	add	edi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz	$L013aw_loop
$L012aw_finish:
	mov	ebp,		DWORD PTR 32[esp]
	and	ebp,		7
	jz	$L014aw_end
	; Tail Round 0
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR [ebx],ecx
	jz	$L014aw_end
	; Tail Round 1
	mov	ecx,		DWORD PTR 4[esi]
	mov	edx,		DWORD PTR 4[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 4[ebx],ecx
	jz	$L014aw_end
	; Tail Round 2
	mov	ecx,		DWORD PTR 8[esi]
	mov	edx,		DWORD PTR 8[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 8[ebx],ecx
	jz	$L014aw_end
	; Tail Round 3
	mov	ecx,		DWORD PTR 12[esi]
	mov	edx,		DWORD PTR 12[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 12[ebx],ecx
	jz	$L014aw_end
	; Tail Round 4
	mov	ecx,		DWORD PTR 16[esi]
	mov	edx,		DWORD PTR 16[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 16[ebx],ecx
	jz	$L014aw_end
	; Tail Round 5
	mov	ecx,		DWORD PTR 20[esi]
	mov	edx,		DWORD PTR 20[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 20[ebx],ecx
	jz	$L014aw_end
	; Tail Round 6
	mov	ecx,		DWORD PTR 24[esi]
	mov	edx,		DWORD PTR 24[edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 24[ebx],ecx
$L014aw_end:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_bn_add_words ENDP
PUBLIC	_bn_sub_words

_bn_sub_words PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	mov	ebx,		DWORD PTR 20[esp]
	mov	esi,		DWORD PTR 24[esp]
	mov	edi,		DWORD PTR 28[esp]
	mov	ebp,		DWORD PTR 32[esp]
	xor	eax,		eax
	and	ebp,		4294967288
	jz	$L015aw_finish
$L016aw_loop:
	; Round 0
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	; Round 1
	mov	ecx,		DWORD PTR 4[esi]
	mov	edx,		DWORD PTR 4[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 4[ebx],ecx
	; Round 2
	mov	ecx,		DWORD PTR 8[esi]
	mov	edx,		DWORD PTR 8[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 8[ebx],ecx
	; Round 3
	mov	ecx,		DWORD PTR 12[esi]
	mov	edx,		DWORD PTR 12[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 12[ebx],ecx
	; Round 4
	mov	ecx,		DWORD PTR 16[esi]
	mov	edx,		DWORD PTR 16[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 16[ebx],ecx
	; Round 5
	mov	ecx,		DWORD PTR 20[esi]
	mov	edx,		DWORD PTR 20[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 20[ebx],ecx
	; Round 6
	mov	ecx,		DWORD PTR 24[esi]
	mov	edx,		DWORD PTR 24[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 24[ebx],ecx
	; Round 7
	mov	ecx,		DWORD PTR 28[esi]
	mov	edx,		DWORD PTR 28[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 28[ebx],ecx
	; 
	add	esi,		32
	add	edi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz	$L016aw_loop
$L015aw_finish:
	mov	ebp,		DWORD PTR 32[esp]
	and	ebp,		7
	jz	$L017aw_end
	; Tail Round 0
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR [ebx],ecx
	jz	$L017aw_end
	; Tail Round 1
	mov	ecx,		DWORD PTR 4[esi]
	mov	edx,		DWORD PTR 4[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 4[ebx],ecx
	jz	$L017aw_end
	; Tail Round 2
	mov	ecx,		DWORD PTR 8[esi]
	mov	edx,		DWORD PTR 8[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 8[ebx],ecx
	jz	$L017aw_end
	; Tail Round 3
	mov	ecx,		DWORD PTR 12[esi]
	mov	edx,		DWORD PTR 12[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 12[ebx],ecx
	jz	$L017aw_end
	; Tail Round 4
	mov	ecx,		DWORD PTR 16[esi]
	mov	edx,		DWORD PTR 16[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 16[ebx],ecx
	jz	$L017aw_end
	; Tail Round 5
	mov	ecx,		DWORD PTR 20[esi]
	mov	edx,		DWORD PTR 20[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 20[ebx],ecx
	jz	$L017aw_end
	; Tail Round 6
	mov	ecx,		DWORD PTR 24[esi]
	mov	edx,		DWORD PTR 24[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 24[ebx],ecx
$L017aw_end:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_bn_sub_words ENDP
PUBLIC	_bn_sub_part_words

_bn_sub_part_words PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	mov	ebx,		DWORD PTR 20[esp]
	mov	esi,		DWORD PTR 24[esp]
	mov	edi,		DWORD PTR 28[esp]
	mov	ebp,		DWORD PTR 32[esp]
	xor	eax,		eax
	and	ebp,		4294967288
	jz	$L018aw_finish
$L019aw_loop:
	; Round 0
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	; Round 1
	mov	ecx,		DWORD PTR 4[esi]
	mov	edx,		DWORD PTR 4[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 4[ebx],ecx
	; Round 2
	mov	ecx,		DWORD PTR 8[esi]
	mov	edx,		DWORD PTR 8[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 8[ebx],ecx
	; Round 3
	mov	ecx,		DWORD PTR 12[esi]
	mov	edx,		DWORD PTR 12[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 12[ebx],ecx
	; Round 4
	mov	ecx,		DWORD PTR 16[esi]
	mov	edx,		DWORD PTR 16[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 16[ebx],ecx
	; Round 5
	mov	ecx,		DWORD PTR 20[esi]
	mov	edx,		DWORD PTR 20[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 20[ebx],ecx
	; Round 6
	mov	ecx,		DWORD PTR 24[esi]
	mov	edx,		DWORD PTR 24[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 24[ebx],ecx
	; Round 7
	mov	ecx,		DWORD PTR 28[esi]
	mov	edx,		DWORD PTR 28[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 28[ebx],ecx
	; 
	add	esi,		32
	add	edi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz	$L019aw_loop
$L018aw_finish:
	mov	ebp,		DWORD PTR 32[esp]
	and	ebp,		7
	jz	$L020aw_end
	; Tail Round 0
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz	$L020aw_end
	; Tail Round 1
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz	$L020aw_end
	; Tail Round 2
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz	$L020aw_end
	; Tail Round 3
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz	$L020aw_end
	; Tail Round 4
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz	$L020aw_end
	; Tail Round 5
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz	$L020aw_end
	; Tail Round 6
	mov	ecx,		DWORD PTR [esi]
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
$L020aw_end:
	cmp	DWORD PTR 36[esp],0
	je	$L021pw_end
	mov	ebp,		DWORD PTR 36[esp]
	cmp	ebp,		0
	je	$L021pw_end
	jge	$L022pw_pos
	; pw_neg
	mov	edx,		0
	sub	edx,		ebp
	mov	ebp,		edx
	and	ebp,		4294967288
	jz	$L023pw_neg_finish
$L024pw_neg_loop:
	; dl<0 Round 0
	mov	ecx,		0
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR [ebx],ecx
	; dl<0 Round 1
	mov	ecx,		0
	mov	edx,		DWORD PTR 4[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 4[ebx],ecx
	; dl<0 Round 2
	mov	ecx,		0
	mov	edx,		DWORD PTR 8[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 8[ebx],ecx
	; dl<0 Round 3
	mov	ecx,		0
	mov	edx,		DWORD PTR 12[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 12[ebx],ecx
	; dl<0 Round 4
	mov	ecx,		0
	mov	edx,		DWORD PTR 16[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 16[ebx],ecx
	; dl<0 Round 5
	mov	ecx,		0
	mov	edx,		DWORD PTR 20[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 20[ebx],ecx
	; dl<0 Round 6
	mov	ecx,		0
	mov	edx,		DWORD PTR 24[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 24[ebx],ecx
	; dl<0 Round 7
	mov	ecx,		0
	mov	edx,		DWORD PTR 28[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 28[ebx],ecx
	; 
	add	edi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz	$L024pw_neg_loop
$L023pw_neg_finish:
	mov	edx,		DWORD PTR 36[esp]
	mov	ebp,		0
	sub	ebp,		edx
	and	ebp,		7
	jz	$L021pw_end
	; dl<0 Tail Round 0
	mov	ecx,		0
	mov	edx,		DWORD PTR [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR [ebx],ecx
	jz	$L021pw_end
	; dl<0 Tail Round 1
	mov	ecx,		0
	mov	edx,		DWORD PTR 4[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 4[ebx],ecx
	jz	$L021pw_end
	; dl<0 Tail Round 2
	mov	ecx,		0
	mov	edx,		DWORD PTR 8[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 8[ebx],ecx
	jz	$L021pw_end
	; dl<0 Tail Round 3
	mov	ecx,		0
	mov	edx,		DWORD PTR 12[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 12[ebx],ecx
	jz	$L021pw_end
	; dl<0 Tail Round 4
	mov	ecx,		0
	mov	edx,		DWORD PTR 16[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 16[ebx],ecx
	jz	$L021pw_end
	; dl<0 Tail Round 5
	mov	ecx,		0
	mov	edx,		DWORD PTR 20[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD PTR 20[ebx],ecx
	jz	$L021pw_end
	; dl<0 Tail Round 6
	mov	ecx,		0
	mov	edx,		DWORD PTR 24[edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD PTR 24[ebx],ecx
	jmp	$L021pw_end
$L022pw_pos:
	and	ebp,		4294967288
	jz	$L025pw_pos_finish
$L026pw_pos_loop:
	; dl>0 Round 0
	mov	ecx,		DWORD PTR [esi]
	sub	ecx,		eax
	mov	DWORD PTR [ebx],ecx
	jnc	$L027pw_nc0
	; dl>0 Round 1
	mov	ecx,		DWORD PTR 4[esi]
	sub	ecx,		eax
	mov	DWORD PTR 4[ebx],ecx
	jnc	$L028pw_nc1
	; dl>0 Round 2
	mov	ecx,		DWORD PTR 8[esi]
	sub	ecx,		eax
	mov	DWORD PTR 8[ebx],ecx
	jnc	$L029pw_nc2
	; dl>0 Round 3
	mov	ecx,		DWORD PTR 12[esi]
	sub	ecx,		eax
	mov	DWORD PTR 12[ebx],ecx
	jnc	$L030pw_nc3
	; dl>0 Round 4
	mov	ecx,		DWORD PTR 16[esi]
	sub	ecx,		eax
	mov	DWORD PTR 16[ebx],ecx
	jnc	$L031pw_nc4
	; dl>0 Round 5
	mov	ecx,		DWORD PTR 20[esi]
	sub	ecx,		eax
	mov	DWORD PTR 20[ebx],ecx
	jnc	$L032pw_nc5
	; dl>0 Round 6
	mov	ecx,		DWORD PTR 24[esi]
	sub	ecx,		eax
	mov	DWORD PTR 24[ebx],ecx
	jnc	$L033pw_nc6
	; dl>0 Round 7
	mov	ecx,		DWORD PTR 28[esi]
	sub	ecx,		eax
	mov	DWORD PTR 28[ebx],ecx
	jnc	$L034pw_nc7
	; 
	add	esi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz	$L026pw_pos_loop
$L025pw_pos_finish:
	mov	ebp,		DWORD PTR 36[esp]
	and	ebp,		7
	jz	$L021pw_end
	; dl>0 Tail Round 0
	mov	ecx,		DWORD PTR [esi]
	sub	ecx,		eax
	mov	DWORD PTR [ebx],ecx
	jnc	$L035pw_tail_nc0
	dec	ebp
	jz	$L021pw_end
	; dl>0 Tail Round 1
	mov	ecx,		DWORD PTR 4[esi]
	sub	ecx,		eax
	mov	DWORD PTR 4[ebx],ecx
	jnc	$L036pw_tail_nc1
	dec	ebp
	jz	$L021pw_end
	; dl>0 Tail Round 2
	mov	ecx,		DWORD PTR 8[esi]
	sub	ecx,		eax
	mov	DWORD PTR 8[ebx],ecx
	jnc	$L037pw_tail_nc2
	dec	ebp
	jz	$L021pw_end
	; dl>0 Tail Round 3
	mov	ecx,		DWORD PTR 12[esi]
	sub	ecx,		eax
	mov	DWORD PTR 12[ebx],ecx
	jnc	$L038pw_tail_nc3
	dec	ebp
	jz	$L021pw_end
	; dl>0 Tail Round 4
	mov	ecx,		DWORD PTR 16[esi]
	sub	ecx,		eax
	mov	DWORD PTR 16[ebx],ecx
	jnc	$L039pw_tail_nc4
	dec	ebp
	jz	$L021pw_end
	; dl>0 Tail Round 5
	mov	ecx,		DWORD PTR 20[esi]
	sub	ecx,		eax
	mov	DWORD PTR 20[ebx],ecx
	jnc	$L040pw_tail_nc5
	dec	ebp
	jz	$L021pw_end
	; dl>0 Tail Round 6
	mov	ecx,		DWORD PTR 24[esi]
	sub	ecx,		eax
	mov	DWORD PTR 24[ebx],ecx
	jnc	$L041pw_tail_nc6
	mov	eax,		1
	jmp	$L021pw_end
$L042pw_nc_loop:
	mov	ecx,		DWORD PTR [esi]
	mov	DWORD PTR [ebx],ecx
$L027pw_nc0:
	mov	ecx,		DWORD PTR 4[esi]
	mov	DWORD PTR 4[ebx],ecx
$L028pw_nc1:
	mov	ecx,		DWORD PTR 8[esi]
	mov	DWORD PTR 8[ebx],ecx
$L029pw_nc2:
	mov	ecx,		DWORD PTR 12[esi]
	mov	DWORD PTR 12[ebx],ecx
$L030pw_nc3:
	mov	ecx,		DWORD PTR 16[esi]
	mov	DWORD PTR 16[ebx],ecx
$L031pw_nc4:
	mov	ecx,		DWORD PTR 20[esi]
	mov	DWORD PTR 20[ebx],ecx
$L032pw_nc5:
	mov	ecx,		DWORD PTR 24[esi]
	mov	DWORD PTR 24[ebx],ecx
$L033pw_nc6:
	mov	ecx,		DWORD PTR 28[esi]
	mov	DWORD PTR 28[ebx],ecx
$L034pw_nc7:
	; 
	add	esi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz	$L042pw_nc_loop
	mov	ebp,		DWORD PTR 36[esp]
	and	ebp,		7
	jz	$L043pw_nc_end
	mov	ecx,		DWORD PTR [esi]
	mov	DWORD PTR [ebx],ecx
$L035pw_tail_nc0:
	dec	ebp
	jz	$L043pw_nc_end
	mov	ecx,		DWORD PTR 4[esi]
	mov	DWORD PTR 4[ebx],ecx
$L036pw_tail_nc1:
	dec	ebp
	jz	$L043pw_nc_end
	mov	ecx,		DWORD PTR 8[esi]
	mov	DWORD PTR 8[ebx],ecx
$L037pw_tail_nc2:
	dec	ebp
	jz	$L043pw_nc_end
	mov	ecx,		DWORD PTR 12[esi]
	mov	DWORD PTR 12[ebx],ecx
$L038pw_tail_nc3:
	dec	ebp
	jz	$L043pw_nc_end
	mov	ecx,		DWORD PTR 16[esi]
	mov	DWORD PTR 16[ebx],ecx
$L039pw_tail_nc4:
	dec	ebp
	jz	$L043pw_nc_end
	mov	ecx,		DWORD PTR 20[esi]
	mov	DWORD PTR 20[ebx],ecx
$L040pw_tail_nc5:
	dec	ebp
	jz	$L043pw_nc_end
	mov	ecx,		DWORD PTR 24[esi]
	mov	DWORD PTR 24[ebx],ecx
$L041pw_tail_nc6:
$L043pw_nc_end:
	mov	eax,		0
$L021pw_end:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_bn_sub_part_words ENDP
_TEXT$	ENDS
END
